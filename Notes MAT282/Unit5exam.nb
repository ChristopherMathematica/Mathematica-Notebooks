(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    350688,       7620]
NotebookOptionsPosition[    337672,       7404]
NotebookOutlinePosition[    338020,       7419]
CellTagsIndexPosition[    337977,       7416]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "n"], "/", 
   RowBox[{"(", 
    RowBox[{"n", "*", 
     RowBox[{"Log", "[", "n", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.765296184661869*^9, 3.7652962672939253`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"71008859-bb16-40a4-a692-3a81f0009def"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,3,3,30700376184093814497,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7652962683138494`*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"574a9350-e195-4061-ba52-00a0ac9fd862"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "n_", "]"}], ":=", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "n"], 
    RowBox[{"n", " ", 
     RowBox[{"Log", "[", "n", "]"}]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7652962920341887`*^9, 3.7652963074237485`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"54bce082-0f24-4c33-895d-1a93e8ef8485"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumConvergence", "[", 
  RowBox[{
   RowBox[{"F", "[", "n", "]"}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.7652962760721865`*^9, 3.7652963167131214`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"b6d24b20-2ad1-4029-823d-b12a0f45c5df"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7652963175710955`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"b2968d31-20da-4b5d-a6bb-7519ceac9b4d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "F", "]"}]], "Input",
 CellChangeTimes->{{3.7652967746603546`*^9, 3.7652967849131155`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"e6ee850c-e0c0-4fa8-98f2-33d558b1de42"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "n_", "]"}], ":=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "n"], "*", 
    SuperscriptBox["2", 
     FractionBox["1", "n"]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7652967872607365`*^9, 3.765296819060972*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"1fb1f48e-28e2-4ac1-bbb6-b40cdfdfc60d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumConvergence", "[", 
  RowBox[{
   RowBox[{"F", "[", "n", "]"}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.765296822227496*^9, 3.765296833012435*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"7924ed9b-e238-4241-b554-e2c556036465"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.7652968341959343`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"44b40770-b1c3-4e44-a0a5-a1f87fc2ca41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   SuperscriptBox["2", 
    FractionBox["1", "n"]], ",", 
   RowBox[{"n", "\[Rule]", " ", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7652968625238533`*^9, 3.7652968882562675`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"399c232f-a199-4c79-8978-a9ac9e2ca5b6"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.765296888876191*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"4f35822a-4ddc-4136-b849-043463f259f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "0"}], "\[Infinity]"], 
  FractionBox[
   SuperscriptBox["x", "n"], 
   RowBox[{"n", "!"}]]}]], "Input",
 CellChangeTimes->{{3.765297191071679*^9, 3.7652972173782053`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"1aa3644d-7855-44bb-8b5c-7819e1ec6cb9"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "x"]], "Output",
 CellChangeTimes->{3.765297217961769*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"7daa4e78-69f2-4b0b-8592-616b21af998b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"SumConvergence", "[", 
   RowBox[{
    FractionBox[
     SuperscriptBox["x", "n"], 
     RowBox[{"n", "!"}]], ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.765297226611312*^9, 3.7652973025850077`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"5a1c73d2-0c51-48e6-b2ae-b6a8fa48f2fe"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7652972697641644`*^9, 3.7652973030270467`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"40962c40-e0fb-4a7d-b6d8-b1d36f8f7f0c"]
}, Open  ]],

Cell[TextData[{
 "Radius of convergence Sum from n = 0 to infinity ",
 Cell[BoxData[
  FractionBox[
   SuperscriptBox["x", "n"], 
   RowBox[{"n", "!"}]]],
  CellChangeTimes->{{3.765297191071679*^9, 3.7652972173782053`*^9}},
  ExpressionUUID->"7f2cd165-089d-4292-a83d-849f5349db97"]
}], "WolframAlphaLong",
 CellChangeTimes->{{3.765297309990326*^9, 3.7652973426876917`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"96728a5f-a5bc-4ad3-9290-747cb549c65b"],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  FractionBox[
   RowBox[{
    SuperscriptBox["n", "2"], "*", 
    SuperscriptBox["2", 
     RowBox[{"n", "-", "1"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "5"}], ")"}], "n"]]}]], "Input",
 CellChangeTimes->{{3.7653115510298905`*^9, 3.76531160964847*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"77ebb67d-76d9-4ce9-b3db-97c47743d7a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"An", "=", " ", 
   FractionBox[
    RowBox[{
     SuperscriptBox["n", "2"], "*", 
     SuperscriptBox["2", 
      RowBox[{"n", "-", "1"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "5"}], ")"}], "n"]]}], ";"}]], "Input",
 CellChangeTimes->{{3.765311713252836*^9, 3.7653117399740515`*^9}, {
  3.7653118390128*^9, 3.765311842212633*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"1c396df5-3190-4c68-8e5a-fadf96dd028a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"An1", "=", " ", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}], "2"], "*", 
     SuperscriptBox["2", "n"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "5"}], ")"}], 
     RowBox[{"n", "+", "1"}]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7653117471419487`*^9, 3.7653117978342705`*^9}, {
  3.7653118458159246`*^9, 3.7653118476386175`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"5cacae0d-b8ca-408d-862f-f781b2c53459"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    FractionBox["An1", "An"], "]"}], ",", 
   RowBox[{"n", "\[Rule]", " ", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7653118549150896`*^9, 3.765311897646556*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"3f7a6349-183d-4367-a435-e4047fa75639"],

Cell[BoxData[
 FractionBox["2", "5"]], "Output",
 CellChangeTimes->{3.7653118990017867`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"098aab84-6393-45a0-aaca-95931be0c83d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  FractionBox[
   RowBox[{
    SuperscriptBox["2", "n"], "*", 
    RowBox[{"n", "!"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "!"}]]}]], "Input",
 CellChangeTimes->{{3.765312908930045*^9, 3.765312932143295*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"5765331a-9456-4057-a57d-3470a8688e8b"],

Cell[BoxData[
 TemplateBox[{
  "Sum","div","\"Sum does not converge.\"",2,23,5,30700376184093814497,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.765312933118656*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"41b06055-2956-48c1-b5b4-3c1bd828770d"],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  FractionBox[
   RowBox[{
    SuperscriptBox["2", "n"], " ", 
    RowBox[{"n", "!"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "+", "n"}], ")"}], "!"}]]}]], "Output",
 CellChangeTimes->{3.7653129331287637`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"bcf2ca6d-1f7d-4185-a6ec-4c7b930568dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Sum from n=1 to infinity (2^n*n!)/(n + 2)!", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"PartialSums", "Partial sums", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}, 
      "ExtrusionOpen" -> True}}, Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods"}, Typeset`pod1$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "100", "primary" -> "true", "scanner" -> "Sum", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TagBox[
               FormBox[
                TagBox[
                 StyleBox[
                  RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"n", "=", "1"}], "\[Infinity]"], 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["2", "n"], " ", 
                    RowBox[{"n", "!"}]}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "2"}], ")"}], "!"}]]}], ScriptLevel -> 
                  0, StripOnInput -> False], HoldForm], TraditionalForm], 
               HoldForm], 
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[10], Selectable -> False], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"sum does not converge\"", 
                 "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False]}, "RowDefault"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "n! is the factorial function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Factorial.html",
            "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/GammaBetaErf/Factorial", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Factorial.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{"n", "!"}], "\" \"", "\"is the factorial function\""},
                "RowDefault"], TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "ConvergenceTests", "numsubpods" -> 
     "1", "position" -> "200", "primary" -> "true", "scanner" -> "Sum", 
     "title" -> "Convergence tests"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
           "\"By the limit test, the series diverges.\"", TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Partial sum formula", "scanner" -> "Sum", "id" -> 
     "PartialSumFormula", "position" -> "250", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               TagBox[
                FormBox[
                 TagBox[
                  StyleBox[
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"n", "=", "1"}], "m"], 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["2", "n"], " ", 
                    RowBox[{"n", "!"}]}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "2"}], ")"}], "!"}]]}], ScriptLevel -> 
                   0, StripOnInput -> False], HoldForm], TraditionalForm], 
                HoldForm], PolynomialForm[#, TraditionalOrder -> False]& ], 
              "\[LongEqual]", 
              RowBox[{
                RowBox[{"-", 
                  RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["2", 
                    RowBox[{"m", "+", "1"}]], " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"m", "+", "1"}], ")"}], "!"}], " ", 
                    TemplateBox[{"1", 
                    RowBox[{"m", "+", "2"}], 
                    RowBox[{"m", "+", "4"}], "2"}, "Hypergeometric2F1"]}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"m", "+", "3"}], ")"}], "!"}]]}]}], "-", 
                FractionBox[
                 RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]}]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "_2F_1(a, b;c;x) is the hypergeometric function"}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://reference.wolfram.com/language/ref/Hypergeometric2F1.html",
            "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> 
           "http://functions.wolfram.com/HypergeometricFunctions/\
Hypergeometric2F1", "text" -> "Properties", "title" -> 
           "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/HypergeometricFunction.html",
            "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TemplateBox[{"a", "b", "c", "x"}, "Hypergeometric2F1"], 
                "\" \"", "\"is the hypergeometric function\""}, "RowDefault"],
               TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "PartialSums", "numsubpods" -> "1", 
     "position" -> "300", "scanner" -> "Sum", "title" -> "Partial sums"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ListLinePlot[Accumulate[Table[(2^n n!)/(n + 2)!, {n, 1, 6}]]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]], 
                 
                 LineBox[{{1., 0.3333333333333333}, {2., 
                  0.6666666666666666}, {3., 1.0666666666666667`}, {4., 1.6}, {
                  5., 2.361904761904762}, {6., 3.5047619047619047`}}]}}, {{
                 Directive[
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1], 
                  PointSize[Medium]], 
                 GeometricTransformationBox[
                  InsetBox[
                   BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", FontSize -> Rational[50, 7], 
                    StripOnInput -> False], TraditionalForm]], {0., 0.}], {{{
                  1., 0.3333333333333333}}, {{2., 0.6666666666666666}}, {{3., 
                  1.0666666666666667`}}, {{4., 1.6}}, {{5., 
                  2.361904761904762}}, {{6., 
                  3.5047619047619047`}}}]}, {}}}, {}, {}, {{}, {}}, {{}, \
{}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.05]}}, AxesOrigin -> {1., 0.}, 
              PlotRange -> {{0, 6.}, {0., 3.5047619047619047`}}, 
              PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
              Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {1., 0.}, AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              FrameTicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10], 
              GridLines -> {None, None}, GridLinesStyle -> Automatic, 
              ImageSize -> 220., 
              LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
              Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0, 6.}, {0., 3.5047619047619047`}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.05]}}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              Ticks -> {Automatic, Automatic}, TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More terms", "input" -> "PartialSums__More terms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show points", "input" -> 
         "PartialSums__Show points"}, {}]}]}], Typeset`pod5$$, Typeset`pod6$$,
    Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {True, False, {False}, True}
   , Typeset`aux26$$ = {True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
     "Sum", "timedout" -> "Sum", "timedoutpods" -> "", "timing" -> "2.537", 
     "parsetiming" -> "1.043", "parsetimedout" -> "false", "recalculate" -> 
     "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa353019f6i1ic05717293000061dic6bi3eid0f071957145831721155515", "id" -> 
     "MSPa353119f6i1ic0571729300004b4idaif1i7a5f86", "host" -> 
     "http://www3.wolframalpha.com", "server" -> "51", "related" -> 
     "http://www3.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa353219f6i1ic0571729300002a1fdi69e5fe28ib1957145831721155515", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "1", 
     "datatypes" -> "Sum", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "3.097", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www3.wolframalpha.com", "server" -> "46", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2019, 4, 26, 20, 15, 57.3056168`9.510772025042039}, "Line" -> 
    24, "SessionID" -> 30700376184093814497}, Typeset`showpods$$ = {1, 2, 3, 
   4}, Typeset`failedpods$$ = {5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}, 
   Typeset`chosen$$ = {"PartialSums", "Partial sums", 1, 1, "Content"}, 
   Typeset`open$$ = True, Typeset`newq$$ = 
   "Sum from n=1 to infinity (2^n*n!)/(n + 2)!"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1120., {1163., 35.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
         Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www3.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa353019f6i1ic05717293000061dic6bi3eid0f071957145831721155515", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[24]:=",ExpressionUUID->"6cd2e3b5-910c-4b3b-855f-fd507c13f2a8"],

Cell[BoxData[
 InterpretationBox[
  FrameBox[
   StyleBox[
    FormBox[
     TemplateBox[{TagBox[
        FormBox[
         TagBox[
          StyleBox[
           RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"n", "=", "1"}], "\[Infinity]"], 
             FractionBox[
              RowBox[{
                SuperscriptBox["2", "n"], " ", 
                RowBox[{"n", "!"}]}], 
              RowBox[{
                RowBox[{"(", 
                  RowBox[{"n", "+", "2"}], ")"}], "!"}]]}], ScriptLevel -> 0, 
           StripOnInput -> False], HoldForm], TraditionalForm], HoldForm],
       InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[10], Selectable -> False],StyleBox[
        RowBox[{
         "\"(\"", "\[NoBreak]", "\"sum does not converge\"", "\[NoBreak]", 
          "\")\""}], {
         GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
         LineIndent -> 0}, StripOnInput -> False]},
      "RowDefault"],
     TraditionalForm], "Output",
    CellSize->{550, Automatic},
    AutoStyleOptions->{"HighlightFormattingErrors"->False},
    ScriptLevel->0,
    NumberPoint->".",
    RenderingOptions->{"3DRenderingMethod"->"BSPTreeOrDepthBuffer"},
    FontFamily->"Times",
    FontSize->14,
    Background->None,
    GraphicsBoxOptions->{DefaultAxesStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsAxes"],
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics"},
    DefaultFrameStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsFrame"],
    DefaultFrameTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"],
    DefaultTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]},
    Graphics3DBoxOptions->{
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics3D"}}],
   BaseStyle->{Plain},
   FrameMargins->10,
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False],
  WolframAlphaResult[
  "Sum from n=1 to infinity (2^n*n!)/(n + 2)!", {{"Result", 1}, 
    "Content"}]]], "Output",
 CellChangeTimes->{3.765312962325638*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"0e612ee4-71ab-4273-b641-0a85fc225750"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7653130367387056`*^9, 3.7653130489922085`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"409ada42-ad2a-4c73-b42d-e7d34a535368"],

Cell[BoxData[
 RowBox[{
  RowBox[{"An", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["2", "n"], "*", 
     RowBox[{"n", "!"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "+", "2"}], ")"}], "!"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7653130583288836`*^9, 3.765313076881823*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"eb386fc5-3216-4c63-8e58-abfcf603617c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"An1", " ", "=", " ", 
   FractionBox[
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"n", "+", "1"}]], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}], "!"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "+", "3"}], ")"}], "!"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7653130785049047`*^9, 3.7653131107867355`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"2aef2a9f-d16d-4457-8518-11df967dfeae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    FractionBox["An1", "An"], "]"}], ",", 
   RowBox[{"n", "\[Rule]", " ", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.765313113201555*^9, 3.7653131367685847`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"c7490aac-b711-486d-ae4c-59730f854a1d"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.765313137742263*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"5f89016a-dac2-4eec-8288-527049b0c5b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "+", "1"}], ")"}], "!"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "+", "2"}], ")"}], "!"}]}], 
   RowBox[{
    RowBox[{"n", "!"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "+", "3"}], ")"}], "!"}]}]], "]"}]], "Input",
 CellChangeTimes->{{3.7653133528355923`*^9, 3.7653134229690113`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"d0a2f1ec-ac2a-497a-bd95-965dadc95297"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "n"}], ")"}], "!"}], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "+", "n"}], ")"}], "!"}]}], 
  RowBox[{
   RowBox[{"n", "!"}], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "+", "n"}], ")"}], "!"}]}]]], "Output",
 CellChangeTimes->{3.7653134240193386`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"a8c5aa74-6f8a-48e4-aab6-e9a879523150"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "n"}], ")"}], "!"}], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "+", "n"}], ")"}], "!"}]}], 
  RowBox[{
   RowBox[{"n", "!"}], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "+", "n"}], ")"}], "!"}]}]]], "Input",
 CellChangeTimes->{{3.765313627179511*^9, 3.7653136367208705`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"c3684fc6-c01c-4bac-b6e5-305a0c7469b1"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "n"}], ")"}], "!"}], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "+", "n"}], ")"}], "!"}]}], 
  RowBox[{
   RowBox[{"n", "!"}], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "+", "n"}], ")"}], "!"}]}]]], "Output",
 CellChangeTimes->{3.765313637206024*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"aa6fdc1f-cc3d-450b-bdc5-1fdcbfa6cf58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "n"}], ")"}], "!"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", "n"}], ")"}], "!"}]}], 
    RowBox[{
     RowBox[{"n", "!"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3", "+", "n"}], ")"}], "!"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[39]:=",ExpressionUUID->"7b3552c3-49d1-4276-a0ac-06bd8032a902"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", 
   FractionBox["3", "5"], ",", 
   FractionBox["2", "3"], ",", 
   FractionBox["5", "7"], ",", 
   FractionBox["3", "4"], ",", 
   FractionBox["7", "9"], ",", 
   FractionBox["4", "5"], ",", 
   FractionBox["9", "11"], ",", 
   FractionBox["5", "6"], ",", 
   FractionBox["11", "13"], ",", 
   FractionBox["6", "7"], ",", 
   FractionBox["13", "15"], ",", 
   FractionBox["7", "8"], ",", 
   FractionBox["15", "17"], ",", 
   FractionBox["8", "9"], ",", 
   FractionBox["17", "19"], ",", 
   FractionBox["9", "10"], ",", 
   FractionBox["19", "21"], ",", 
   FractionBox["10", "11"], ",", 
   FractionBox["21", "23"]}], "}"}]], "Output",
 CellChangeTimes->{3.7653136590211506`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"48af8ee3-b412-43cf-9ec9-74e095dd9e32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "n"}], ")"}], "!"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", "n"}], ")"}], "!"}]}], 
   RowBox[{
    RowBox[{"n", "!"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "+", "n"}], ")"}], "!"}]}]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[37]:=",ExpressionUUID->"d83f76ae-eb3e-4f1d-87ea-6401c116d43e"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", "n"}], 
  RowBox[{"3", "+", "n"}]]], "Output",
 CellChangeTimes->{3.7653136407318163`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"eb1583e0-935f-4e50-baf1-5071654eecd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "0"}], "\[Infinity]"], 
  FractionBox[
   RowBox[{"n", "*", 
    SuperscriptBox["x", "n"]}], 
   RowBox[{
    SuperscriptBox["2", "n"], "*", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["n", "2"], "+", "1"}], ")"}]}]]}]], "Input",
 CellChangeTimes->{{3.7653138398572397`*^9, 3.765313872883949*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"bc2b8be9-d382-4272-a14e-11097daa1b53"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    FractionBox["1", "8"], "+", 
    FractionBox["\[ImaginaryI]", "8"]}], ")"}], " ", "x", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     RowBox[{"Hypergeometric2F1", "[", 
      RowBox[{
       RowBox[{"1", "-", "\[ImaginaryI]"}], ",", "2", ",", 
       RowBox[{"2", "-", "\[ImaginaryI]"}], ",", 
       FractionBox["x", "2"]}], "]"}]}], "+", 
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{
      RowBox[{"1", "+", "\[ImaginaryI]"}], ",", "2", ",", 
      RowBox[{"2", "+", "\[ImaginaryI]"}], ",", 
      FractionBox["x", "2"]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.765313875384693*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"fd8ce937-fadb-44b0-9ff6-fae2cfb4b0f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Radius of Convergence", "WolframAlphaLong",
 CellChangeTimes->{{3.765313928406401*^9, 3.7653139328022623`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"24703e7d-5cbc-4ccb-b525-b6579d9304dd"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Radius of Convergence", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    InputAssumptions -> {
     "*F.SumConvergence.sumconvergencefunction-_n%2Ax%5E%28n%29%20%2F%20%282%\
5E%28n%29%20%28n%5E%282%29%20%2B1%29%29", 
      "*F.SumConvergence.sumconvergencevariable-_n"}, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Sum", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"SumConvergence[n (x^n/(2^n (n^2 + 1))), n]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                PaneBox[
                 StyleBox[
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    "\"convergence conditions\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TagBox[
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", "n", "\[Infinity]"], 
                    FractionBox[
                    RowBox[{"n", " ", 
                    SuperscriptBox["x", "n"]}], 
                    RowBox[{
                    SuperscriptBox["2", "n"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["n", "2"], "+", "1"}], ")"}]}]]}], 
                    HoldForm]}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                   Global`TagBoxWrapper["Separator" -> " | "]], 
                  LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                 BaselinePosition -> Center]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              ColumnsEqual -> False, RowsEqual -> False, 
              GridBoxSpacings -> {"Columns" -> {{
                   AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
              AllowScriptLevelChange -> False], 
             Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Interval of convergence", "scanner" -> "Sum", "id" -> 
     "IntervalOfConvergence", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{"{", "x", "\[Colon]", " ", 
              RowBox[{
                TemplateBox[{"x"}, "Abs"], "<", "2"}], "}"}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show plot", "input" -> 
         "IntervalOfConvergence__Show plot"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {
        "text" -> 
         "left bracketing bar z right bracketing bar is the absolute value of \
z"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Abs.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ComplexComponents/Abs", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/AbsoluteValue.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TemplateBox[{"z"}, "Abs"], "\" \"", 
                "\"is the absolute value of\"", "\" \"", "z"}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Inequality plot", "scanner" -> "Reduce", "id" -> 
     "InequalityPlot", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[{Abs[x], 2}, {x, -12., 12.}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{{{{}, {}, 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJxF1f831XccwHFfUmPc5Nvhcq77JS7q0OZrUe93ui19LyKdSVZqGLPT5Eut
dnT6glKXo1bXNlm5EfNlliau91tJ+sK1Qkcnl6auwlKTmDvads7L+/PD8zz+
hKdoZ2LwbgM9Pb20//rfXRXykffvpRTEVjq+s/8/Ugripk+KIpInpBTEzpra
O8OvpRTEg6b9F7ufSimIv4rzDq++KaUgPuT0mO45LqUgVuRLclt5Ugrigt6M
xM3GzhTENu0hG12tnSiIWzaFyO45zacgDnJ1SpKIJRTES8ojlGoPMQXxZNYe
y49dRRTEY+OXzkRKhRTETeJcr4YEAQWxv9G31QuiHSiI87Cv7/KDfAriXd+H
Px8ssKUgVl8WGOsrbCiIBaaVH5EaKwpiE6FW/fKKBQVx/Jaj54qLzSmIo272
3hPkmlEQi5dOb76VbkxBXBJT/bSuxoiCOG60KuKEQp+C2P2Q0bbZEh0BkWVa
x4dn80cJiB5Fx7tV9GsJiBp6NvnWKLUERMowb5kqVktAlBQ0vf3eyHMCIvOF
8pwB3TMCotWj1ROOVv0ERPsMx7NFmRoCItkYuewxV0NAZDGQ0bj0TA8BUfld
/ti2wicERNqcZRG5tY8JiMKFx9wMB7sIiFL2u526c6aNgGjDq9ddFcpWAiLn
ndccz167T0DUuVpWtbP7LgGRp11kh87hNgGRJlHiHRFECIiyt1Y2u8SpCIgC
0NLwsRN1BEQK3tYDp9TXCIjCfs5qpGGVBEQmbh5K/psyAqKYv4PuVHuVEBBJ
zn0zV1tXSEBkoF64e3o6n4BIlRBVuuhYHgHRG1uX/lv8LAKi9jJB75bgZAKi
WZ+tFWasiGSWuP+UYnr9MPN86g9jDzvlzJ7u2IrCDeeYYn+f2MTbBUzPDek5
ggsXmSkV69cO25Yy+X2eLiGd5czID7INeoKqmHqLv+5dYXSVKVOg8/MO1TOv
nPbDlxa1Mmc1FdTP8Wpj7piYvfgLXzUzq3LQ1q6gnbnMrnZeX9EDpnIw1PDL
6i5mavZpbWabhnkqNr0r6vAA0+ztOv+yzaPMvqRmr+QjOuar2vU3Ulr08YzK
44VR0ZlGTKd3pZap+cZMzS+OKv8YM2bod30ZQ3Jz5o9FJ1XrzlowZ32a8KdR
mhWzLarkcvARG+ZVM/728XhbprNC9GLOOj5zMvnIVGmIA3No0p5X7CdgXvj8
eIe9RMiUL79/0s5JxOQllgbetBYzG2S/qWr4EuZUwg6fMN58pv6cB+cXTHH6
BO29sUbPmTn5pOyF9V+csvgW+fp3nNm6fr+jk5xCvn3mWwMpc9XWTNeHlpx5
v++Ok3tzujcLhk3SOFNDl+QFHuRsfBYasD+dc4th9smXmZwHsG5hi4Kz5fqj
hKP1nBZrRq1VlDOim9fwtolzZHwlL7qV08b71/JADWdUkzps/x+cJSFD01Va
zoC94o2iEc5j+svGw0c52+XbCuTjnHzhvlUtOs6Z7874L+lwiXI=
                    "]]}, Annotation[#, "Charting`Private`Tag$1179432#1"]& ], 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnbx+wvv//9UPMECAQ53qrQNp7Qj+rNnKk87yIfjz
73fkB3KqwfliF4L9NUVV4fwTAcEup1VV4HwPTdUSZSVlON9qXcyy8/pKcP6v
rjRhI01FOP/r9yVT49QV4PwjSpNM9uXKwfnWrPWbtVNk4PwpDubmjrVScH7y
nIinr+ZLwPnnl8txMs4Sg/PleDYY7t8mAudzKTw7/3KVEJyfE9I6Y8UKATg/
4fD903KTeOF8Jdt/gUcbOeH8lRmbH+7exgrnZ33eGNM9ixHO16tjjWRT/r0f
xheuvMI9bfZnOP96So7W+sfP4PzyKq2+k1PPwfmr+i0clhictYfx+zIbryU0
PYfzeb/4WK8J/AznPyg5ZlLW8hvOf7fT91D5CUYHGH9Z+8KElE5WOF/122rh
itmccP69TfJ7rTN44fzQ6Q86Xk8QgPPnLe3Z6zNNCM5nic59y1opAuefS1i5
PKhFDM7fyisV+z1HAs5Xm6X4gt1HCs7/Vdbyd3WwDJz/+pc03woLOTh/QXr7
FWllBTh/guOZHklVRTifL3+102FRJTh/n8uOvduklOH8v7nxZmF8KnA+I/ul
mdp/EXwzj6JDXgxqCPfcWfNC9BOCr3dM7g1XpTqcD80vcD4A98fMuw==
                    "]]}, 
                  Annotation[#, 
                   "Charting`Private`Tag$1179432#2"]& ]}}, {}, {}}, 
              GraphicsComplexBox[CompressedData["
1:eJxtkjFIlGEcxj8kxEVpCcQpb3E46qDBHIS/Dg0OCUo5H0Vwg6CLQ4ORIkJQ
NDS0BDU0KHSDBUF30RvccFIOhxcERiBEDQdiIpoYed697/N7wY8Ojt8993z3
fc/3u6//1szknY4kSW603m1+XbswWhn750S7Uhn7/rR66ER79GX+7vS13060
2ufb2cXlH0603lLucbHrkxPtfPksezbCcfCVzgMndB14qB2QfUl4jbCPzD4y
+8jsI7OLzC4yu8jsIrOLvOTPf+xEI9Nv+z37TjQy/Zw/vuFEI9NP+bzlRCPT
B+wO/5/JyKZ+lyb9G103TfoT7U6T/qXuO036+8WuvvHGSdx7+W2mMLT614n2
7cNw69NR7B9Up851Dxw40QZrs5N/fu7Fft3733GiZfz/8yv29/z/t+1EW/N7
67F/9q69r+REe1gOpL/kn4e6wfc6D30+XM9g5+uwg/5m2GtwRfdBfxzu1+B1
eaB/HnwZxJ8YfYmGT36PL9HwSY8v0fBJjy/R8EmPL4hPenxBPNLjC+KRHl8Q
j/T4gnhM+0s/fx/bp5trRq+1VL66uPyklGtG3xeVF5Tz2fYXTXuh4wvKp0VV
HQU=
               "], {
                Directive[{
                  Hue[0.6, 0.3, 0.95], 
                  EdgeForm[{
                    Hue[0.6, 0.3, 0.75]}], 
                  Hue[0.67, 0.6, 0.6, 0.15], 
                  EdgeForm[
                   Opacity[0.]]}], {
                 TagBox[
                  
                  PolygonBox[{{1, 40, 21, 60, 2, 42, 23, 62, 3, 44, 25, 64, 4,
                    46, 27, 66, 5, 48, 29, 68, 6, 50, 31, 70, 7, 52, 33, 72, 
                   8, 54, 35, 74, 9, 56, 37, 76, 10, 58, 81, 80, 84, 78, 20, 
                   57, 38, 77, 19, 55, 36, 75, 18, 53, 34, 73, 17, 51, 32, 71,
                    16, 49, 30, 69, 15, 47, 28, 67, 14, 45, 26, 65, 13, 43, 
                   24, 63, 12, 41, 22, 61, 11, 39, 83, 79, 82, 59}}], 
                  Annotation[#, "Geometry"]& ]}}]}, {GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], ImageSize -> 
              330., DisplayFunction -> Identity, 
              Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
              FrameTicks -> {{Automatic, {{0., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {6., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {8., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {10., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.5, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.5, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.5, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.5, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {4.5, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {5.5, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {6.5, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {7., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {7.5, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {8.5, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {9., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {9.5, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {10.5, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {11., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {11.5, 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {12., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{-10., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-5., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {0., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {10., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-15., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-14., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-13., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-12., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-11., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-9., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-8., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-7., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-6., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-4., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-3., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-2., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {6., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {7., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {8., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {9., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {11., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {12., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {13., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {14., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {15., 
                   FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                   0.005, 0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.05], 
                 Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              GridLines -> {None, None}, GridLinesStyle -> {
                GrayLevel[0.85], 
                GrayLevel[0.9]}, ImageSize -> 440., 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                PointSize[Medium], "PointSizeFunction" -> "SmallPointSize", 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{-12., 12.}, {0., 11.999999510204082`}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.02]}}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              Ticks -> {Automatic, Automatic}}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Alternate form assuming x>0", "scanner" -> 
     "Simplification", "id" -> 
     "AlternateFormAssumingAllVariablesAreRealAndPositive", "position" -> 
     "400", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"PowerExpand[Abs[x] < 2, Assumptions -> {}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{"x", "<", "2"}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Alternate form assuming x is real", "scanner" -> 
     "Simplification", "id" -> "AlternateFormAssumingAllVariablesAreReal", 
     "position" -> "500", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"ComplexExpand[Abs[x] < 2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SqrtBox[
               SuperscriptBox["x", "2"]], "<", "2"}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Solution", "scanner" -> "Reduce", "id" -> 
     "LocusSolution", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Reduce[Abs[x] < 2, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    RowBox[{"-", "2"}], "<", "x", "<", "2"}], 
                   BaselinePosition -> Baseline, ImageSize -> 550]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column",
                 GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "Reduce", "id" -> 
     "NumberLine", "position" -> "700", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"NumberLinePlot[Abs[x] < 2, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{{
                 RGBColor[0.24720000000000014`, 0.24, 0.6], {
                  Thickness[Large], 
                  LineBox[{{-2., 0.132}, {2., 0.132}}]}, 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{-2., 0.132}], 
                    PointSize[0.01], 
                    GrayLevel[1.], 
                    PointBox[{-2., 0.132}]}, 
                   RowBox[{"-", "2"}]], Annotation[#, -2., "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{2., 0.132}], 
                    PointSize[0.01], 
                    GrayLevel[1.], 
                    PointBox[{2., 0.132}]}, "2"], 
                  Annotation[#, 2., "Tooltip"]& ]}}, ImageSize -> 330., 
               Axes -> {True, False}, PlotRange -> {{-2.2, 2.2}, Automatic}, 
               AxesOrigin -> {0, 0}], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Right", FontFamily -> "Bitstream Vera Sans", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Interval notation", "scanner" -> "Reduce", "id" -> 
     "IntervalNotation", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{"(", 
              RowBox[{"-", "2"}], ",", "2", ")"}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod9$$ = 
   XMLElement[
   "pod", {"title" -> "Integer solutions", "scanner" -> "Reduce", "id" -> 
     "IntegerSolution", "position" -> "900", "error" -> "false", "numsubpods" -> 
     "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Reduce[Abs[x] < 2, x, Integers]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  RowBox[{"x", "\[LongEqual]", 
                    RowBox[{"\[PlusMinus]", 
                    TagBox["1", PrecedenceForm[#, 485]& ]}]}], 
                  BaselinePosition -> Baseline, ImageSize -> 550]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Reduce[Abs[x] < 2, x, Integers]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  RowBox[{"x", "\[LongEqual]", "0"}], BaselinePosition -> 
                  Baseline, ImageSize -> 550]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {
   True, False, {False, False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "3"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "Radius of Convergence", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "2"}, {
        XMLElement[
        "value", {
         "name" -> "Calculator", "desc" -> "a computation", "input" -> 
          "*C.Radius+of+Convergence-_*Calculator-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MathWorld", "desc" -> 
          " referring to a mathematical definition", "input" -> 
          "*C.Radius+of+Convergence-_*MathWorld-"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "desc" -> "summand", "current" -> "1", 
        "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "SumConvergence.sumconvergencefunction", "desc" -> 
          "n*x^(n) / (2^(n) (n^(2) +1))", "valid" -> "true", "input" -> 
          "*F.SumConvergence.sumconvergencefunction-_n*x%5E%28n%29+%2F+%282%\
5E%28n%29+%28n%5E%282%29+%2B1%29%29"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "desc" -> "summation variable", "current" -> 
        "1", "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "SumConvergence.sumconvergencevariable", "desc" -> "n", 
          "valid" -> "true", "input" -> 
          "*F.SumConvergence.sumconvergencevariable-_n"}, {}]}]}]}, 
   Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "9", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.604", 
    "parsetiming" -> "1.199", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa74261fdg3ded7fgb64ad0000121if93b72fi0fg0", "host" -> 
    "http://www4f.wolframalpha.com", "server" -> "46", "related" -> 
    "http://www4f.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa74271fdg3ded7fgb64ad00004dia7ege9ae62fa76761110708085623651", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2019, 4, 26, 20, 33, 47.5899909`9.43009048272048}, "Line" -> 
    43, "SessionID" -> 30700376184093814497}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "Radius of Convergence"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{962., {1063., 1073.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.765313934705824*^9, 
  3.7653139940900145`*^9},ExpressionUUID->"437a386d-2d6d-4bde-adc6-\
a363d9deb133"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], "*", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["n", "2"], "+", "1"}], ")"}], 
     RowBox[{"n", "*", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"n", "+", "1"}], ")"}], "2"], "+", "1"}], ")"}]}]]}], ",", 
   RowBox[{"n", "\[Rule]", " ", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7653148536292915`*^9, 3.765314896945259*^9}, {
  3.7653149343779106`*^9, 3.76531496150443*^9}, {3.765315038445195*^9, 
  3.765315074194949*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"83ec9156-ef47-4c08-9e1a-a2ad0803b1f0"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.765314943675006*^9, 3.7653149627947984`*^9}, 
   3.765315075495428*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"c30015f6-c461-4eb7-9588-a8bcfab22464"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"n", "+", "1"}], ")"}], "*", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["n", "2"], "+", "1"}], ")"}], 
    RowBox[{"n", "*", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"n", "+", "1"}], ")"}], "2"], "+", "1"}], ")"}]}]]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.765315091426321*^9, 3.765315117222905*^9}, {
  3.765315155963237*^9, 3.76531515663706*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"c0d1d77b-7f64-4c80-81ac-0043685c3abc"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "n"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["n", "2"]}], ")"}]}], 
  RowBox[{"n", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "n"}], ")"}], "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.7653151574709225`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"123fecb9-bccd-4397-bd3b-b4dc04032b52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "n"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["n", "2"]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76531533738824*^9, 3.7653153680440674`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"9fe9fd95-03f9-457e-8f73-e8b565e3c3c1"],

Cell[BoxData[
 RowBox[{"1", "+", "n", "+", 
  SuperscriptBox["n", "2"], "+", 
  SuperscriptBox["n", "3"]}]], "Output",
 CellChangeTimes->{3.7653153688897095`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"14be8926-1c7a-4027-8349-188c28ccfb4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"n", "*", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}], "2"], "+", "1"}], ")"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.765315788270473*^9, 3.76531580724234*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"bf6b6ce2-d3aa-46bb-8376-508dcbd5dba3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "n"}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["n", "2"]}], "+", 
  SuperscriptBox["n", "3"]}]], "Output",
 CellChangeTimes->{3.7653158086885386`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"4f82622b-7cf2-47ed-9471-9ce5700f064e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ln(4-x) series representation", "WolframAlphaLong",
 CellChangeTimes->{{3.7653174058621817`*^9, 3.7653174405431495`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"bd29d51b-5088-41de-8b12-558b3127e1d6"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "ln(4-x) series representation", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"MathematicalFunction\", \
\"Log:Natural\"][\"SeriesRepresentations\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{"log", "(", 
                    RowBox[{"4", "-", "x"}], ")"}], HoldForm], 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> \
{$CellContext`MathematicalFunctionIdentityData, 
                    HoldComplete[
                    Log[4 - $CellContext`x]]}]], Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"series representation\""}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               $CellContext`TagBoxWrapper["Separator" -> " | "]], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{"log", "(", "x", ")"}], "\" \"", 
                "\"is the natural logarithm\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Results", "scanner" -> "Data", "id" -> 
     "SeriesRepresentations:MathematicalFunctionIdentityData", "position" -> 
     "200", "error" -> "false", "numsubpods" -> "7", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Log[4 - x] == -Sum[((-1)^k (3 - x)^k)/k, {k, 1, Infinity}] /; Abs[3 \
- x] < 1"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TemplateBox[{
               TagBox[
                RowBox[{
                  RowBox[{"log", "(", 
                    RowBox[{"4", "-", "x"}], ")"}], "\[LongEqual]", 
                  RowBox[{"-", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "1"}], "\[Infinity]"], 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "k"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"3", "-", "x"}], ")"}], "k"]}], "k"]}]}]}], 
                HoldForm], 
               StyleBox[
                TemplateBox[{"\"  for \"", 
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TemplateBox[{
                    RowBox[{"3", "-", "x"}]}, "Abs"], "<", "1"}]}, 
                    "RowDefault"], HoldForm]}, "RowDefault"], 
                GrayLevel[0.6], StripOnInput -> False]}, "RowDefault"], 
             FrameStyle -> None, FrameMargins -> {{-1, -1}, {3, 3}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Log[4 - x] == Log[3 - x] - Sum[(-1)^k/(k (3 - x)^k), {k, 1, \
Infinity}] /; Abs[3 - x] > 1"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TemplateBox[{
               TagBox[
                RowBox[{
                  RowBox[{"log", "(", 
                    RowBox[{"4", "-", "x"}], ")"}], "\[LongEqual]", 
                  RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"3", "-", "x"}], ")"}], "-", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "1"}], "\[Infinity]"], 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "k"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"3", "-", "x"}], ")"}], 
                    RowBox[{"-", "k"}]]}], "k"]}]}]}], HoldForm], 
               StyleBox[
                TemplateBox[{"\"  for \"", 
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TemplateBox[{
                    RowBox[{"3", "-", "x"}]}, "Abs"], ">", "1"}]}, 
                    "RowDefault"], HoldForm]}, "RowDefault"], 
                GrayLevel[0.6], StripOnInput -> False]}, "RowDefault"], 
             FrameStyle -> None, FrameMargins -> {{-1, -1}, {3, 3}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Log[4 - x] == (2 I) Pi Floor[Arg[4 - x - \[Xi]]/(2 Pi)] + Log[\[Xi]] \
- Sum[((-1)^k (4 - x - \[Xi])^k)/(k \[Xi]^k), {k, 1, Infinity}] /; \[Xi] < \
0"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TemplateBox[{
               TagBox[
                RowBox[{
                  RowBox[{"log", "(", 
                    RowBox[{"4", "-", "x"}], ")"}], "\[LongEqual]", 
                  RowBox[{
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
                    TemplateBox[{
                    FractionBox[
                    RowBox[{"arg", "(", 
                    RowBox[{"4", "-", "x", "-", "\[Xi]"}], ")"}], 
                    RowBox[{"2", " ", "\[Pi]"}]]}, "Floor"]}], "+", 
                    RowBox[{"log", "(", "\[Xi]", ")"}], "-", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "1"}], "\[Infinity]"], 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "k"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"4", "-", "x", "-", "\[Xi]"}], ")"}], "k"], " ", 
                    SuperscriptBox["\[Xi]", 
                    RowBox[{"-", "k"}]]}], "k"]}]}]}], HoldForm], 
               StyleBox[
                TemplateBox[{"\"  for \"", 
                  TagBox[
                   TemplateBox[{
                    RowBox[{"\[Xi]", "<", "0"}]}, "RowDefault"], HoldForm]}, 
                 "RowDefault"], 
                GrayLevel[0.6], StripOnInput -> False]}, "RowDefault"], 
             FrameStyle -> None, FrameMargins -> {{-1, -1}, {3, 3}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Log[4 - x] == Floor[Arg[4 - x - Subscript[z, 0]]/(2 Pi)] \
Log[Subscript[z, 0]^(-1)] + Log[Subscript[z, 0]] + Floor[Arg[4 - x - \
Subscript[z, 0]]/(2 Pi)] Log[Subscript[z, 0]] - Sum[((-1)^k (4 - x - \
Subscript[z, 0])^k)/(k Subscript[z, 0]^k), {k, 1, Infinity}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                RowBox[{"log", "(", 
                  RowBox[{"4", "-", "x"}], ")"}], "\[LongEqual]", 
                RowBox[{
                  RowBox[{
                    TemplateBox[{
                    FractionBox[
                    RowBox[{"arg", "(", 
                    RowBox[{"4", "-", "x", "-", 
                    SubscriptBox["z", "0"]}], ")"}], 
                    RowBox[{"2", " ", "\[Pi]"}]]}, "Floor"], " ", 
                    RowBox[{"log", "(", 
                    FractionBox["1", 
                    SubscriptBox["z", "0"]], ")"}]}], "+", 
                  RowBox[{"log", "(", 
                    SubscriptBox["z", "0"], ")"}], "+", 
                  RowBox[{
                    TemplateBox[{
                    FractionBox[
                    RowBox[{"arg", "(", 
                    RowBox[{"4", "-", "x", "-", 
                    SubscriptBox["z", "0"]}], ")"}], 
                    RowBox[{"2", " ", "\[Pi]"}]]}, "Floor"], " ", 
                    RowBox[{"log", "(", 
                    SubscriptBox["z", "0"], ")"}]}], "-", 
                  RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "1"}], "\[Infinity]"], 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "k"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"4", "-", "x", "-", 
                    SubscriptBox["z", "0"]}], ")"}], "k"], " ", 
                    SubsuperscriptBox["z", "0", 
                    RowBox[{"-", "k"}]]}], "k"]}]}]}], HoldForm], FrameStyle -> 
             None, FrameMargins -> {{-1, -1}, {3, 3}}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Log[4 - x] == (2 I) Pi Floor[(Pi - Arg[(4 - x)/Subscript[z, 0]] - \
Arg[Subscript[z, 0]])/(2 Pi)] + Log[Subscript[z, 0]] - Sum[((-1)^k (4 - x - \
Subscript[z, 0])^k)/(k Subscript[z, 0]^k), {k, 1, Infinity}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                RowBox[{"log", "(", 
                  RowBox[{"4", "-", "x"}], ")"}], "\[LongEqual]", 
                RowBox[{
                  RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
                    TemplateBox[{
                    FractionBox[
                    RowBox[{"\[Pi]", "-", 
                    RowBox[{"arg", "(", 
                    FractionBox[
                    RowBox[{"4", "-", "x"}], 
                    SubscriptBox["z", "0"]], ")"}], "-", 
                    RowBox[{"arg", "(", 
                    SubscriptBox["z", "0"], ")"}]}], 
                    RowBox[{"2", " ", "\[Pi]"}]]}, "Floor"]}], "+", 
                  RowBox[{"log", "(", 
                    SubscriptBox["z", "0"], ")"}], "-", 
                  RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "1"}], "\[Infinity]"], 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "k"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"4", "-", "x", "-", 
                    SubscriptBox["z", "0"]}], ")"}], "k"], " ", 
                    SubsuperscriptBox["z", "0", 
                    RowBox[{"-", "k"}]]}], "k"]}]}]}], HoldForm], FrameStyle -> 
             None, FrameMargins -> {{-1, -1}, {3, 3}}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TemplateBox[{
               TagBox[
                RowBox[{
                  RowBox[{"log", "(", 
                    RowBox[{"4", "-", "x"}], ")"}], "\[LongEqual]", 
                  RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"j", "=", "1"}], "\[Infinity]"], 
                    RowBox[{
                    SubscriptBox["Res", 
                    RowBox[{"s", "=", 
                    RowBox[{"-", "j"}]}]], 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"3", "-", "x"}], ")"}], 
                    RowBox[{"-", "s"}]], " ", 
                    SuperscriptBox[
                    TemplateBox[{
                    RowBox[{"-", "s"}]}, "Gamma"], "2"], " ", 
                    TemplateBox[{
                    RowBox[{"1", "+", "s"}]}, "Gamma"]}], 
                    TemplateBox[{
                    RowBox[{"1", "-", "s"}]}, "Gamma"]]}]}]}], HoldForm], 
               StyleBox[
                TemplateBox[{"\"  for \"", 
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TemplateBox[{
                    RowBox[{"3", "-", "x"}]}, "Abs"], "<", "1"}]}, 
                    "RowDefault"], HoldForm]}, "RowDefault"], 
                GrayLevel[0.6], StripOnInput -> False]}, "RowDefault"], 
             FrameStyle -> None, FrameMargins -> {{-1, -1}, {3, 3}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TemplateBox[{
               TagBox[
                RowBox[{
                  RowBox[{"log", "(", 
                    RowBox[{"4", "-", "x"}], ")"}], "\[LongEqual]", 
                  RowBox[{
                    RowBox[{
                    SubscriptBox["Res", 
                    RowBox[{"s", "=", "0"}]], 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"3", "-", "x"}], ")"}], 
                    RowBox[{"-", "s"}]], " ", 
                    TemplateBox[{
                    RowBox[{"-", "s"}]}, "Gamma"], " ", 
                    TemplateBox[{
                    RowBox[{"1", "+", "s"}]}, "Gamma"]}], "s"]}], "+", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"j", "=", "1"}], "\[Infinity]"], 
                    RowBox[{
                    SubscriptBox["Res", 
                    RowBox[{"s", "=", "j"}]], 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"3", "-", "x"}], ")"}], 
                    RowBox[{"-", "s"}]], " ", 
                    TemplateBox[{
                    RowBox[{"-", "s"}]}, "Gamma"], " ", 
                    TemplateBox[{
                    RowBox[{"1", "+", "s"}]}, "Gamma"]}], "s"]}]}]}]}], 
                HoldForm], 
               StyleBox[
                TemplateBox[{"\"  for \"", 
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TemplateBox[{
                    RowBox[{"3", "-", "x"}]}, "Abs"], ">", "1"}]}, 
                    "RowDefault"], HoldForm]}, "RowDefault"], 
                GrayLevel[0.6], StripOnInput -> False]}, "RowDefault"], 
             FrameStyle -> None, FrameMargins -> {{-1, -1}, {3, 3}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "6"}, {
       XMLElement[
       "info", {
        "text" -> 
         "left bracketing bar z right bracketing bar is the absolute value of \
z"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Abs.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ComplexComponents/Abs", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/AbsoluteValue.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TemplateBox[{"z"}, "Abs"], "\" \"", 
                "\"is the absolute value of\"", "\" \"", "z"}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}], 
       XMLElement["info", {"text" -> "arg(z) is the complex argument"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Arg.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ComplexComponents/Arg", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/ComplexArgument.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{"arg", "(", "z", ")"}], "\" \"", 
                "\"is the complex argument\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}], 
       XMLElement[
       "info", {
        "text" -> "\[LeftFloor]x\[RightFloor] is the floor function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Floor.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/IntegerFunctions/Floor", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/FloorFunction.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TemplateBox[{"x"}, "Floor"], "\" \"", 
                "\"is the floor function\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}], 
       XMLElement[
       "info", {"text" -> "\[CapitalGamma](x) is the gamma function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Gamma.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/GammaBetaErf/Gamma", "text" -> 
           "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/GammaFunction.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TemplateBox[{"x"}, "Gamma"], "\" \"", 
                "\"is the gamma function\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}], 
       XMLElement["info", {"text" -> "Res_(z=z_0)f is a complex residue"}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/ComplexResidue.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TemplateBox[{
                  UnderscriptBox["\"Res\"", 
                   TemplateBox[{"z", "\"=\"", 
                    SubscriptBox["z", "0"]}, "RowDefault"]], "f"}, 
                 "RowDefault"], "\" \"", "\"is a complex residue\""}, 
               "RowDefault"], TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}], 
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://functions.wolfram.com/ElementaryFunctions/Log/06/ShowAll.\
html", "text" -> "More information"}, {}]}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False, False, False, False, False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "MathematicalFunctionIdentity", "timedout" -> "", "timedoutpods" -> "", 
    "timing" -> "1.669", "parsetiming" -> "0.375", "parsetimedout" -> "false",
     "recalculate" -> "", "id" -> 
    "MSPa9447148e8084aa2900g7000045f955f558hb1f8d", "host" -> 
    "http://www3.wolframalpha.com", "server" -> "38", "related" -> 
    "http://www3.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa9448148e8084aa2900g700003d3bg6e50ih059898882871044620698160", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2019, 4, 26, 21, 30, 46.6695156`9.421608156900609}, "Line" -> 
    1, "SessionID" -> 30700852957768230784}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "ln(4-x) series representation"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{962., {843., 853.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7653174467245283`*^9},ExpressionUUID->"0e743c14-4541-4e3e-ab85-\
c698589e4b37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factorial", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.765317932738516*^9, 3.76531793745879*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"08947094-375c-471c-bdc5-e77339f3394e"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.7653179380749273`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"6ebc58ad-581f-4e4e-a521-96260df8d8a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"6", "*", "32"}]], "Input",
 CellChangeTimes->{{3.765317945119959*^9, 3.7653179479855814`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"1a491313-fe9b-45ab-a307-4e16b19c0f86"],

Cell[BoxData["192"], "Output",
 CellChangeTimes->{3.765317948495694*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"6070e644-bd35-4e24-99e2-81327e0fa9ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Radius of convergence", "WolframAlphaLong",
 CellChangeTimes->{{3.765318577980592*^9, 3.76531858587471*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"60e2922b-76a9-4023-9a62-3d0aca4df6d3"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Radius of convergence", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    InputAssumptions -> {
     "*F.SumConvergence.sumconvergencefunction-_%28%28-1%29%5Ek%20%283-x%29%\
5Ek%29%2Fk", "*F.SumConvergence.sumconvergencevariable-_k"}, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}, 
    PodStates -> {"IntervalOfConvergence__Show plot"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Sum", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"SumConvergence[((-1)^k (3 - x)^k)/k, k]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                PaneBox[
                 StyleBox[
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    "\"convergence conditions\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TagBox[
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", "k", "\[Infinity]"], 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "k"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"3", "-", "x"}], ")"}], "k"]}], "k"]}], 
                    HoldForm]}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                   Global`TagBoxWrapper["Separator" -> " | "]], 
                  LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                 BaselinePosition -> Center]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              ColumnsEqual -> False, RowsEqual -> False, 
              GridBoxSpacings -> {"Columns" -> {{
                   AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
              AllowScriptLevelChange -> False], 
             Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Interval of convergence", "scanner" -> "Sum", "id" -> 
     "IntervalOfConvergence", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{"{", "x", "\[Colon]", " ", 
              RowBox[{
                TemplateBox[{
                  RowBox[{"x", "-", "3"}]}, "Abs"], "<", "1"}], "}"}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> "Interval of convergence plot"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{{
                 RGBColor[0.24720000000000014`, 0.24, 0.6], {
                  Thickness[Large], 
                  
                  LineBox[{{2., 0.06599999999999999}, {4., 
                   0.06599999999999999}}]}, 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{2., 0.06599999999999999}], 
                    PointSize[0.01], 
                    GrayLevel[1.], 
                    PointBox[{2., 0.06599999999999999}]}, "2"], 
                  Annotation[#, 2., "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{4., 0.06599999999999999}], 
                    PointSize[0.01], 
                    GrayLevel[1.], 
                    PointBox[{4., 0.06599999999999999}]}, "4"], 
                  Annotation[#, 4., "Tooltip"]& ]}}, ImageSize -> 330., 
               Axes -> {True, False}, PlotRange -> {{1.9, 4.1}, Automatic}, 
               AxesOrigin -> {0, 0}], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Right", FontFamily -> "Bitstream Vera Sans", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}], 
       XMLElement["infos", {"count" -> "1"}, {
         XMLElement[
         "info", {
          "text" -> 
           "left bracketing bar z right bracketing bar is the absolute value \
of z"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Abs.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/ComplexComponents/Abs", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/AbsoluteValue.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                TemplateBox[{
                  TemplateBox[{"z"}, "Abs"], "\" \"", 
                  "\"is the absolute value of\"", "\" \"", "z"}, 
                 "RowDefault"], TraditionalForm]], "Output", {
              Background -> None, 
               GraphicsBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
                 DefaultAxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"], DefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
               Graphics3DBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
              NumberPoint -> ".", 
              AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
              RenderingOptions -> {
               "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide plot", "input" -> 
         "IntervalOfConvergence__Hide plot"}, {}]}]}], Typeset`pod3$$ = 
   XMLElement[
   "pod", {"title" -> "Inequality plot", "scanner" -> "Reduce", "id" -> 
     "InequalityPlot", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[{Abs[-3 + x], 1}, {x, 1, 5}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwt1Xs0lOsaAPBxa8YlxnwuUSKXjktFEgu1nzfHVrkdpEhhcDZtdDBbG0db
iN1QZEuyc5vOyCYtk01iNS5dRHLJJRTdqDkuxRATg/nOu1vnj2+9z289l+9b
7/rWerYFR3n9IE2hUBLw89fZ3zqlTqEIYRdoTJMkCb9tGIvbICeEqBUD9oqY
BA/XnpdKCkK4U7t7+5clEnqG/yzWUhOCpbFbsGCGhKeziUZ7jIVgo5r2qmuY
hNYtyntDPYSAJuY7f+eRUB1v6d3FEYLXhe6qPYEkZFgk5hYcmIe43rTTYc0S
2GG2qP5dyQIMDipOPwhahwnImemY+AI6rVFqNlvWwCXPXizUX4K7EY/lVF6L
gfNTj8r2X0TAvLRb+DJ1BWin0+JQ61dYzk1kt8Ay+M9vE4RtXQGu8hutgvci
+OfdnqwdP4uhyHk3ayBjCZKulFwYql+F1MigeJPDi5C+dpSdxViHRJlbcazP
C1B6zmLUxEcCQcm9hkMV8xDhoB0WcpWEq00fC4rChaDasbTmHUdB/LfGSrf1
Z+HratRc+CYpZEhHDt4lM3Bkyf8HarsUqjNlh49PTAI7eyCOxZJG79pq9Kyt
BdBe57fHgyGDPuy4atlSPwFnOUdZdS0yiJ5Uab1L6j3YawX7XQySRcbWcztu
fhmDaJ/xtkm6HEp2/Py8MX4YkvZOd6s1ySG6d3XOcc1+yOfInKv134A4ojaV
DsNOMOzLqR1RpKLk0Y9ZU2nNoO1KJUKUqaj1rEZp8Z5mUG3/hfWZTkXvdA7e
8RxvAgk/fLe0BhUhZkV/IzTBcIUjz0yPivQ+hmtmiu9DZvLyrSQr3D87xzGN
bgShOfM/hv5URJEW10acqAPBrSEpXiDu55q26SrUwWsjtyDbYCpiOp4YGmio
hc7NdnruYbj/V/6yvUYtcKlqJXExVMRRPLdfqa8Gjr1t/70zHX+vKS37eFY1
8LPNf4uuxvM9t9SNhpTh/2yT2ewdnP+yZHvmMRcqHlDaImpxPr+3RdmIC1cW
+5ZDG/D7R1OfHRDcgHC/WKb/Q5x/1t/2j74S2LS90dx5CHsx0mDyVR5kt9x4
2j6CbatnvrnoCsgezwz5fhQ7acDO3T8X5i6euIbeYavGlp1quQxP5tcl1tPY
dsrSUk/TYd9FQUHdJ+zHsVphLufhT8NeS8s5bPdRi+7uZCj24YTuXMR+4tFi
eTMOGPNsSpUIe0xnVlLJAnZmzHXjFex3L2zz/SNAYuBnVb6KTYu+tissCGKb
HHoMJNitxoObH7nB9DGzUzcoNERBr8PldloBU0hI68pgU86X0pd9YShjrbBI
Dtv3bwtRrFBwMfi4V5uGne/UGWEVDa387t5rCtjJCYWl5mfA+lj9j+obsSNv
Rw6Y/hv0My4U0xnY34JUKNCPtslWw/4WpIEy37dPURP7W3ABVmZN5KhbsL8F
l+C5d1fkuhH2KdPQekku7Px0VHHYjYaQYuKLh2e40ODt2pLpgfO71Ad4+mXg
2OTw03dHsD15z4t6y+BktvnoTV/saxPPfjYph0wL+arYEBpK1nd9aPq6AgSx
fGdGAratDi/XsRo46/qZbmW4vi7QsSajDtRUhLTHYpwfl9qa4tsCci2FPIMi
eeQhvL9i9/ApRFrdfynvooCY3Jfd7r79cPtwMKdZhO3GkFm6OwyiGW26IF8R
3QkcTra4Nwb1Rw7K5DkqoRF3nY0ejPeQfCi9tE6ghO9HPan/+gTov3Ye4aZv
ROxYs6DLGgKwt0nL07JURp/G6F6hHZPgv7V3RWpAGcUm7Psv1XUGRJ1Z49Ep
KmjEzCbzkdwsuEqb25kw6MhCnj9ZdkgICnN+nlLBdGTMj/hejj0P55vRraIG
OlISS1eyxhcgxZvnEyOvimS9mgLajBbBrnvYST5IFU1aBW42SluCt+qOabR7
quisD11Vf0wE8ka2GgeoDGSY98FXVmcZZjUmp/YFMFDDCc4fX+JXwLdXl8Hi
MRBz/7lDHU1i4PkUspVJBuIHnNa3W1uFBw+fo38dJZCs4t9lGo+ug+9ithu1
nEDMPntrnQIJPOlxsIj6g0Cb7BUf8IslYFUpYgxXEOh52SuXk1wJqAQEjJRX
EWhffEJQYTWub98Z4lSD63XvXdJqk8Dewq74dD6BBiMtJ9QXJMBwUCiTGSDQ
IZpJjrIrCclbmn+NGCQQhbWsXe1Jwqwo5seBFwRqGG2/6eaD903Vy13cEQIZ
8kLvXwrG9eqVjQ5vcP2xMoFCAglzkwd7U6YIxOfq7qeWk3Dy0WrN1DSBojfO
tZdXkdBZzMvz/EQg47hmL6caEsq9NP22zRGowNn/VDqfhAC+4EPrIoHi569f
kRkgoSv/eruxiEAWJ8K3ckdIsItxv5XzlUCTj20rHd6QoL69PoopJpB3wUhz
yhQJqZRwr45VAtGkKw5vmyNB+Epnr8U6gVoj4gZbF/H8u32aBRI8/4VTIBPv
167L6WKSxPP/v3//B6hCaw0=
                    "]]}, Annotation[#, "Charting`Private`Tag$1834437#1"]& ], 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfenAS1EGhg/2DGDwwX5dhVHImQUIfqdB9aQZjh/h
fB3tL6J28z7B+Y/tJ7w+8fgznO89xfrXB6WvcP6C4nP8arXf4HyO3JZyhwPf
4fzYj4rP0uV+wvkpW8/16pT9gvPrJs9rv7btN5zf+ie0o1foL5w/v97gtmb4
Pzg/20kqPXnqfzhf8MTXPyHlDA4w/vff+e+zJBjh/OCvsansxxH8jr7L5UVF
THD+8S1RxgFCzHB+zYLQoi37EXxryaSo7kQWOL8g/NHRFwKscH6d6auzInsR
/GkLmOs3x7LB+SoXJ2y+wc0O5+/p059YsA7B130Tyn3dlwPOF+H/wHHkF4LP
un/2euU5nHB+jsnum5zeXHD+Gs+kBfu+IfjfXksJPJvGDedvC3ZnnuLCA+c3
eLTO3/IMwVe663VjcSsvwr/mLVMkjfjg/Fi58z8ZLyP43071Pipo5IfzfZj0
rTSFBOB8rvdRgYxJCH7zPodVc3Yg+I0h68MLOQXhfKuz1904ExH8+6IuLRzb
EXxOVUsxR3YhOP+d2IuXNnEIfsR5eaGi9Qj++vDZHXz/EfyDhy445IUKI9R/
6fNlX4bgCzlxLWG+jOCf6W/99f8/gg8AVePxfg==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1834437#2"]& ]}}, {}, {}}, 
                GraphicsComplexBox[CompressedData["
1:eJxllg9MVVUcxx+P95/3QKZsWkZqhDjcskWLFu383GrFMjIysrBhYpMWTVq6
dNNlZGZm04YNXbRw0dTSJZuSipEOHS6oMDEpoUBBEBCobNas2Tvfe773rMXG
4Hu/9557zvn+Pr9zpy9ZXvi81+PxjMd/9d/HhpryGmZ45ESRLzZz5Zh6q+rI
HVv2eaSvPm1uc/4V9VXcLctNEO2WpA+ra/3aSJCMstw9138bVPGbQzcVeOWB
5vzu6pZLapm+3OmVpenFqTk1feqj3rrR1tJEWb+6/MH2igvq3Kba+JVEqetY
G7/So1JyauL/+WRjiX6gSz0UH6XI55dT+vXd59RrG/SE/BJqK82u3HBGfYEX
BmQrJvStGuvUAwZkwsuF8amdVDMr9QNBmdaobzyiSrL1haBIVnz6xTtVNd4b
kmO3O/o7LdtD0nPYuT+ol1kclooKZzzVrv8Jy3ii875XsY6IHGp15vP5DL0R
EVll5juA60mSa9Zzqx4uNSprzHqfwr5EZZHZjy0teuNjkmf2qwXvjclUs583
phTEE0qWv5c5+30PridLV9TJY7kepjBFjpq8dmEeKVJj8mS+HvyMu/lSM19q
5kvNfKmZLzXzpWa+1MyXmvlSM19q5kvNfKmZLzXzpWa+1MyXmvlSM19q5kvN
fKmZLzXzpWa+1MyXmvlSM19q5kvNfKmZLzXzXYJ9GFPDWpZ5ZAH4GHU1778N
3HpkBepzxNX09ew71ibINl0moSFX00f5hLxyAPMYcDV9bE+VVzqwzn5X0wdG
6YlyFcZFV9O/T5fjnkSZhJx6XU3/FczbJ2VY38+upv9ZvFqHmnyyG/P6ydX0
L4ITvwxifmddTf9mLNgvWXj/aVfTfwLvDUg7xv/a1fTf0bgMBWQ+nj/uavrN
4DIotfDrXU3/+g39Q92X9189ru7S+G0KyeJM53lq+i/qZaWFZX+m835q+h/r
22vDMsfMn5r+eY1zdkQ6M531U9OfqMu1ISLbzf5R038EDSRJFpr9p6b/hm4P
rUky2eRHTb9Rl39RVEYynfyp6f+up9sblTZTP9T0s3W7KY/JXlN/1PRLNU7X
YrLZ1C81/Q/0ciuTpdzUPzX9M7p9xVJknuGHmn6SHrY6RWYb/shrgeGTPu8n
vxNxfUx9iP7lkc2om1F1L/K1fJ5FP/PIXtT1iMKxl2b5BE7FCYLjsmpI4fFa
62O5/Qkygr4wqNC+s72uj+ErvBLVw+ddUmhPDdY/iH7oldnoe33qceRr+byC
XBJlHt7Tq95GvtbHsZvqk07U/S/qOPK1fD6L/umTyVjIefUX8rX+++inflmI
PvmDuhP5Wj6/Qe5+2Y51fK9ewIKt78e6ArIf+bWpncjX8nk/xg3IHGxgs/oR
+Vr+VqIfB2UxNv6gSkVu1t+HvIOybpZe6HsqH/laPvux7yERfG98ql53Gqjr
34J+HJJaNMYmdRjns+XzSfTjsMzHe1rUrzivrf8uhotIGeqoXc3C+W35PIm6
iEgW9rlDPYfz3Pr/4LsiSQadg17tQIFYPu9GP06S3eib3eo0znvrv4R9jcoB
vL5HhXH+Wz4/Qd1GZRvq6IKai/gtf90YNyYrkHO/Wo3vA+unYdoxWYAcBlQ9
vhcsn4+Cu2TJwT5dVpfx/WD9N8FVskzCOobVdHxPWB6/RF2myNVn9AD2e+oP
cfh8Ghz/n19nO8ZcXqcWO8+TZ95PXvPM+8kzffK6yMyfPNMnr2vM+skzffJa
Y/aPPNMnr0fN/pNn+uS1y+RHnumT1z9N/uSZPnnNLXPqhzzTJ6+rTP2RZ/rk
9ZCpX/JMn7yOm/onz/TJa4/P4Yc80yevxxod/sgzffK6LsPhlzzTJ6/TKhz+
yTN98rq11ekf5Jk+eZ1g+g95pk9eHzb9izzTJ68h0//IM33yeirq9E/yTJ+8
bjT9lzzTJ68Zpn+TZ/rk1Wf6P3mmT177pjjnB3mmT15PmPOHPNMnr3Xm/CLP
9MnrenP+kWf65HOpOT/J7y7DJ/nm/f8CdgVjHw==
                 "], {
                  Directive[{
                    Hue[0.6, 0.3, 0.95], 
                    EdgeForm[{
                    Hue[0.6, 0.3, 0.75]}], 
                    Hue[0.67, 0.6, 0.6, 0.15], 
                    EdgeForm[
                    Opacity[0.]]}], {
                   TagBox[
                    PolygonBox[CompressedData["
1:eJwt0VN7FgAAhuEv23bLtl3Lbtm1rC27lmvZtm3btm37J3R31cF9PQfv4RsU
Gh4SFjUQCETh9/8OpwIH+buNpBKHicZoqnCU6IyhKseJwTiqc5KYTKAmp4nF
JGpzlthMoS7nicNU6nORuEynIZeJx0xCuEp8ZtOE6yRgLs24SULm04LbJGIh
rbhLYhbThvskYSnteEhSltOBxyRjJaE8JTmr6cxzUrCWrrwkJevpzmtSsZGe
vCU1m+nNe9KwlTA+kpbt9OUz6dhJf76Snt0M5DsZ2MtgfpKRfQzhF+XYz9DA
v7/LsodB/KAMuxjAN0qzg358oRTbCOcTJdlCHz5Qgk304h3F2UAP3lCMdXTj
FUVZQxdeUIRVdOIZhVlBR55QiGW05xEFWUJbHlCARbTmHvlZQEvukI95NOcW
eZlDU26Qh1k05hq5mUEjrpCLaTTgEjmJpB4XyMFk6nCO7EykFmfIxnhqcIqs
jKUaJ8hCBMEcI4hRVOYImRlBRQ6RiQOUZxh/APRbc54=
                    "]], Annotation[#, "Geometry"]& ]}}]}, {
               GridLines -> Dynamic[
                  Map[{{#, 
                    GrayLevel[0.7]}}& , 
                   MousePosition[{"Graphics", Graphics}, None]]], ImageSize -> 
                330., DisplayFunction -> Identity, 
                Ticks -> {Automatic, Automatic}, AxesOrigin -> {1., 0}, 
                FrameTicks -> {{Automatic, {{0., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.1, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.2, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.3, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.4, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.6, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.7, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.8, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.1, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.2, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.3, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.4, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.6, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.7, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.8, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.9, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{1., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.2, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.4, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.6, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.8, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.2, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.4, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.6, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.8, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.2, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.4, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.6, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.8, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {4.2, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {4.4, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {4.6, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {4.8, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {None, None}, 
                DisplayFunction -> Identity, PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {
                   Scaled[0.05], 
                   Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                All, DisplayFunction -> Identity, AspectRatio -> 
                NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {1., 0}, AxesStyle -> Directive[
                  AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
                DisplayFunction :> Identity, 
                Frame -> {{False, False}, {False, False}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  AbsoluteThickness[0.2]], 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {None, None}, 
                GridLinesStyle -> {
                  GrayLevel[0.85], 
                  GrayLevel[0.9]}, ImageSize -> 440., 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  PointSize[Medium], "PointSizeFunction" -> "SmallPointSize", 
                  "ScalingFunctions" -> None, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{1, 5}, {0., 1.9999999183673474`}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {
                   Scaled[0.02], 
                   Scaled[0.02]}}, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                Ticks -> {Automatic, Automatic}}], 
              TagBox[
               GridBox[{{
                  GraphicsBox[{
                    RGBColor[0.24720000000000014`, 0.24, 0.6], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, ImageSize -> NCache[
                    Rational[143, 10], 14.3], 
                   BaselinePosition -> (Center -> Center)], 
                  StyleBox[
                   TemplateBox[{
                    RowBox[{"x", "-", "3"}]}, "Abs"], {
                   FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                  GraphicsBox[{
                    RGBColor[0.6, 0.24, 0.4428931686004542], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, ImageSize -> NCache[
                    Rational[143, 10], 14.3], 
                   BaselinePosition -> (Center -> Center)], 
                  StyleBox["1", {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.3}}, "Rows" -> {{0.3}}}],
                "Grid"]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  
                  ItemBox[#2, Alignment -> {Inherited, Bottom}, 
                   DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Right", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Bottom", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Alternate form assuming x is real", "scanner" -> 
     "Simplification", "id" -> "AlternateFormAssumingAllVariablesAreReal", 
     "position" -> "400", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"ComplexExpand[Abs[-3 + x] < 1]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SqrtBox[
               SuperscriptBox[
                RowBox[{"(", 
                  RowBox[{"x", "-", "3"}], ")"}], "2"]], "<", "1"}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Solution", "scanner" -> "Reduce", "id" -> 
     "LocusSolution", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Reduce[Abs[-3 + x] < 1, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{"2", "<", "x", "<", "4"}], BaselinePosition -> 
                   Baseline, ImageSize -> 550]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column",
                 GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "Reduce", "id" -> 
     "NumberLine", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"NumberLinePlot[Abs[-3 + x] < 1, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{{
                 RGBColor[0.24720000000000014`, 0.24, 0.6], {
                  Thickness[Large], 
                  
                  LineBox[{{2., 0.06599999999999999}, {4., 
                   0.06599999999999999}}]}, 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{2., 0.06599999999999999}], 
                    PointSize[0.01], 
                    GrayLevel[1.], 
                    PointBox[{2., 0.06599999999999999}]}, "2"], 
                  Annotation[#, 2., "Tooltip"]& ], 
                 TagBox[
                  TooltipBox[{
                    PointSize[0.02], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    PointBox[{4., 0.06599999999999999}], 
                    PointSize[0.01], 
                    GrayLevel[1.], 
                    PointBox[{4., 0.06599999999999999}]}, "4"], 
                  Annotation[#, 4., "Tooltip"]& ]}}, ImageSize -> 330., 
               Axes -> {True, False}, PlotRange -> {{1.9, 4.1}, Automatic}, 
               AxesOrigin -> {0, 0}], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Right", FontFamily -> "Bitstream Vera Sans", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Interval notation", "scanner" -> "Reduce", "id" -> 
     "IntervalNotation", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{"(", "2", ",", "4", ")"}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod8$$ = 
   XMLElement[
   "pod", {"title" -> "Integer solution", "scanner" -> "Reduce", "id" -> 
     "IntegerSolution", "position" -> "800", "error" -> "false", "numsubpods" -> 
     "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Reduce[Abs[-3 + x] < 1, x, Integers]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  RowBox[{"x", "\[LongEqual]", "3"}], BaselinePosition -> 
                  Baseline, ImageSize -> 550]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {True, False, {False}, True},
    Typeset`aux8$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "3"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "Radius of convergence", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "2"}, {
        XMLElement[
        "value", {
         "name" -> "Calculator", "desc" -> "a computation", "input" -> 
          "*C.Radius+of+convergence-_*Calculator-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MathWorld", "desc" -> 
          " referring to a mathematical definition", "input" -> 
          "*C.Radius+of+convergence-_*MathWorld-"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "desc" -> "summand", "current" -> "1", 
        "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "SumConvergence.sumconvergencefunction", "desc" -> 
          "((-1)^k (3-x)^k)/k", "valid" -> "true", "input" -> 
          "*F.SumConvergence.sumconvergencefunction-_%28%28-1%29%5Ek+%283-x%\
29%5Ek%29%2Fk"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "desc" -> "summation variable", "current" -> 
        "1", "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "SumConvergence.sumconvergencevariable", "desc" -> "k", 
          "valid" -> "true", "input" -> 
          "*F.SumConvergence.sumconvergencevariable-_k"}, {}]}]}]}, 
   Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "8", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.624", 
    "parsetiming" -> "1.222", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa373523di45047ih9hbe4000048hg0i5gdf39b5g4", "host" -> 
    "http://www4b.wolframalpha.com", "server" -> "55", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa373623di45047ih9hbe4000061941f869a5h17245965109366486662577", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2019, 4, 26, 21, 50, 29.2339743`9.218462770893879}, "Line" -> 
    8, "SessionID" -> 30700852957768230784}, Typeset`showpods$$ = {1, 2, 3, 4,
    5, 6, 7, 8}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "Radius of convergence"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{962., {1007., 1017.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.765318588396256*^9},ExpressionUUID->"24ead2cd-d82f-4957-85ce-\
1e43b44f32e9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7653190918579626`*^9, 3.7653191033230424`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"483864c4-c5fa-4f87-8771-7f5dce65240e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"An", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "n"]}], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "-", "x"}], ")"}], "n"]}], "n"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7653195265542183`*^9, 3.765319578106561*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"44c7a9a6-fdb8-4697-96f9-e20e010611be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"An1", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"n", "+", "1"}]]}], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "-", "x"}], ")"}], 
      RowBox[{"n", "+", "1"}]]}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7653195847459993`*^9, 3.765319613561716*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"e29d295b-8bd8-4884-931a-8ee7ad63002f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  FractionBox["An1", "An"], "]"}]], "Input",
 CellChangeTimes->{{3.765319617060482*^9, 3.7653196408215995`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"ef22aa5a-94c2-41b9-97a7-c5b2fb2b9bf2"],

Cell[BoxData[
 FractionBox[
  RowBox[{"n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "x"}], ")"}]}], 
  RowBox[{"1", "+", "n"}]]], "Output",
 CellChangeTimes->{3.7653196413575363`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"06b5a45e-44d6-492e-986f-5cccbfa68436"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Sum from n=1 to infinity ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "-", "1"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["n", "2"], "*", 
      RowBox[{"Sqrt", "[", "n", "]"}]}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "afecde27-096d-4cb4-9817-84dfe367d435"]
}], "WolframAlphaLong",
 CellChangeTimes->{{3.765320247173238*^9, 3.7653203077689247`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"f1e324ae-7ad4-472f-beea-8f1e0aba8ce6"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Sum from n=1 to infinity (n - 1)/(n^2*Sqrt[n])", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}, 
    PodStates -> {
     "PartialSums__More terms", "PartialSums__More terms", 
      "PartialSums__More terms", "PartialSums__More terms"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Infinite sum", "scanner" -> "Sum", "id" -> "Result", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Sum[(n - 1)/(n^2 Sqrt[n]), {n, 1, Infinity}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              RowBox[{
                RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
                  FractionBox[
                   RowBox[{"n", "-", "1"}], 
                   RowBox[{
                    SuperscriptBox["n", "2"], " ", 
                    SqrtBox["n"]}]]}], "\[LongEqual]", 
                TagBox[
                 RowBox[{
                   TemplateBox[{
                    FractionBox["3", "2"]}, "Zeta"], "-", 
                   TemplateBox[{
                    FractionBox["5", "2"]}, "Zeta"]}], Identity]}]}, 
             "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "\[Zeta](s) is the Riemann zeta function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Zeta.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> 
           "http://functions.wolfram.com/ZetaFunctionsandPolylogarithms/Zeta",
            "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/RiemannZetaFunction.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TemplateBox[{"s"}, "Zeta"], "\" \"", 
                "\"is the Riemann zeta function\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Decimal approximation", "scanner" -> "Sum", "id" -> 
     "DecimalApproximation", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"N[Zeta[3/2] - Zeta[5/2], 79]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                  "\"1.2708880914345711635917978745754594939477630228940768963\
19\[Ellipsis]\"", LineIndent -> 0.54, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
                "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], FrameMargins -> {{0, 10}, {0, 0}}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> 
         "DecimalApproximation__More digits"}, {}]}]}], Typeset`pod3$$ = 
   XMLElement[
   "pod", {"title" -> "Convergence tests", "scanner" -> "Sum", "id" -> 
     "ConvergenceTests", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "3", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"The ratio test is inconclusive.\"", TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"The root test is inconclusive.\"", TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
           "\"By the comparison test, the series converges.\"", 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Partial sum formula", "scanner" -> "Sum", "id" -> 
     "PartialSumFormula", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               TagBox[
                FormBox[
                 TagBox[
                  StyleBox[
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"n", "=", "1"}], "m"], 
                    FractionBox[
                    RowBox[{"n", "-", "1"}], 
                    RowBox[{
                    SuperscriptBox["n", "2"], " ", 
                    SqrtBox["n"]}]]}], ScriptLevel -> 0, StripOnInput -> 
                   False], HoldForm], TraditionalForm], HoldForm], 
               PolynomialForm[#, TraditionalOrder -> False]& ], 
              "\[LongEqual]", 
              RowBox[{
                TemplateBox[{"m", 
                  FractionBox["3", "2"]}, "HarmonicNumber2", SyntaxForm -> 
                 SubsuperscriptBox], "-", 
                TemplateBox[{"m", 
                  FractionBox["5", "2"]}, "HarmonicNumber2", SyntaxForm -> 
                 SubsuperscriptBox]}]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "H_n^(r) is the generalized harmonic number"}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://reference.wolfram.com/language/ref/HarmonicNumber.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> 
           "http://functions.wolfram.com/GammaBetaErf/HarmonicNumber2", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/HarmonicNumber.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                
                TemplateBox[{"n", "r"}, "HarmonicNumber2", SyntaxForm -> 
                 SubsuperscriptBox], "\" \"", 
                "\"is the generalized harmonic number\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Partial sums", "scanner" -> "Sum", "id" -> 
     "PartialSums", "position" -> "100", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ListLinePlot[Accumulate[Table[(n - 1)/(n^2 Sqrt[n]), {n, 1, \
81}]]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.011000000000000001`], 
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]], 
                 LineBox[CompressedData["
1:eJxV039MzHEcx/FbC7cULTErGpJSoZ9SqXuV66rrrvveXSx2LKn+kcTW8ms6
+qV2RZFm01GhMUV05CRxW/OH3/1BP5BSdF31NfkVK78+7z98tu++e3yf39ef
n8XJO1WpVgKBQPn7+fP+d3iR4P+Dh6E5afqz7ey7EPqmnLqkgg5me+ZOZkf4
tq/QNzu9Zp4PY+yPsO5XvcwLgD1OssnEPuZFyN9h+Nxe0c+8BKNbwwV7a98x
L4W1n3hSrxtgXobMNZbMtsRBZg+kGIf4VLv3zJ6YV+Trb2wge2OLRLrto+gD
80psdv+mLzGRff45dIjZFxcyeWnJRbIfBG8sX3tmmZn9MZig48rTyQEIQPeL
EyZyIKbep3N1jsPMq+EQNzCYkUQOwvdOK+OeOvIaFMzd5B1uJgej7e64zGO5
hTkEXUGG0vIUcigc+vZ9fXiavBZV4uyBhc/JYSg6cvSQyXqEORz7slz58QCy
CLf358v7k8mAyCFdayxl1gL3jmw1VzdTj0DKQe3Pll7qERiu2G/wmjHKeiTW
Kyy2M72ZtZEo+OasyFJQX4fx1J7th3dRX4dTYcUhMeXUxdil4Zu6GqmLkZGd
5Sl7Sj0K2V6t6fUj1KPQMmj8YmczxroEfm/HZh1wY9ZKwLfVDliDejQap/Kv
NG2kHo3rB6PvnNxNPQZfJnTHDMXUY3C58PioUw31WASLnvNPmqnHoj63c86r
x9SlWGxXJ5a+oy5FUaLe4vKdehwKJe6TV6eze6WNQ/ONExM6e7pnMnAubnuX
OVGX4Vqrf6LWlbocI3m50ipv6nLcKszrygmkHo+OCfkOz3Dq8ajMTYg6I6Gu
QNJQf15vPHUFTNJkH34Dde6vn25hBocKmyL14TT6n4NViIwTZjC3cciYrWvf
lkV7JYJLbSNOHqC9ElNLn62uzqW9EpZNm20LimmvhOOPHkdJGe1VqLEEHu+r
pL0KMxqm3dboaa/CyiBdo+Ec7VWY3pVfOnqJ9moIyz5rhI20V8Ne+NbZ+ibt
1QjWTbX2tdBeDdUnzarz92mfAJ/dH+NkD2ifgOLIVeaXj3jRLy/FjOY=
                  "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
             DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.05]}}, AxesOrigin -> {1., 0.}, 
              PlotRange -> {{0, 81.}, {0., 1.050255694182996}}, 
              PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
              Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {1., 0.}, AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              FrameTicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10], 
              GridLines -> {None, None}, GridLinesStyle -> Automatic, 
              ImageSize -> 220., 
              LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
              Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0, 81.}, {0., 1.050255694182996}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.05]}}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              Ticks -> {Automatic, Automatic}, TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Fewer terms", "input" -> "PartialSums__Fewer terms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More terms", "input" -> "PartialSums__More terms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show points", "input" -> 
         "PartialSums__Show points"}, {}]}]}], Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Series representations", "scanner" -> "Sum", "id" -> 
     "AlternateSeriesRepresentations", "position" -> "600", "error" -> 
     "false", "numsubpods" -> "4"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Zeta[3/2] - Zeta[5/2] == Sum[(-1 + k)/k^(5/2), {k, 1, Infinity}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                RowBox[{
                  TemplateBox[{
                    FractionBox["3", "2"]}, "Zeta"], "-", 
                  TemplateBox[{
                    FractionBox["5", "2"]}, "Zeta"]}], "\[LongEqual]", 
                RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], "\[Infinity]"], 
                  FractionBox[
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "k"}], 
                   SuperscriptBox["k", 
                    RowBox[{"5", "/", "2"}]]]}]}], HoldForm], FrameStyle -> 
             None, FrameMargins -> {{-1, -1}, {3, 3}}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Zeta[3/2] - Zeta[5/2] == Sum[(4 (-1)^(1 + k))/((-4 + Sqrt[2]) \
k^(5/2)) - (2 (-1)^(1 + k))/((-2 + Sqrt[2]) k^(3/2)), {k, 1, Infinity}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                RowBox[{
                  TemplateBox[{
                    FractionBox["3", "2"]}, "Zeta"], "-", 
                  TemplateBox[{
                    FractionBox["5", "2"]}, "Zeta"]}], "\[LongEqual]", 
                RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], "\[Infinity]"], 
                  RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"4", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"1", "+", "k"}]]}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4"}], "+", 
                    SqrtBox["2"]}], ")"}], " ", 
                    SuperscriptBox["k", 
                    RowBox[{"5", "/", "2"}]]}]], "-", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"1", "+", "k"}]]}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    SqrtBox["2"]}], ")"}], " ", 
                    SuperscriptBox["k", 
                    RowBox[{"3", "/", "2"}]]}]]}], ")"}]}]}], HoldForm], 
             FrameStyle -> None, FrameMargins -> {{-1, -1}, {3, 3}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Zeta[3/2] - Zeta[5/2] == Sum[Sum[(2 (-1)^k (2 + 3 k) Binomial[n, \
k])/(3 (1 + k)^(3/2) (1 + n)), {k, 0, n}], {n, 0, Infinity}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                RowBox[{
                  TemplateBox[{
                    FractionBox["3", "2"]}, "Zeta"], "-", 
                  TemplateBox[{
                    FractionBox["5", "2"]}, "Zeta"]}], "\[LongEqual]", 
                RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"n", "=", "0"}], "\[Infinity]"], 
                  RowBox[{"(", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "0"}], "n"], 
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "k"], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"3", " ", "k"}]}], ")"}], " ", 
                    TemplateBox[{"n", "k"}, "Binomial"]}], 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "k"}], ")"}], 
                    RowBox[{"3", "/", "2"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "n"}], ")"}]}]]}], ")"}]}]}], HoldForm],
              FrameStyle -> None, FrameMargins -> {{-1, -1}, {3, 3}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Zeta[3/2] - Zeta[5/2] == Sum[-(1/((1 - 1/(4 Sqrt[2])) (1 + 2 \
k)^(5/2))) + 1/((1 - 1/(2 Sqrt[2])) (1 + 2 k)^(3/2)), {k, 0, Infinity}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                RowBox[{
                  TemplateBox[{
                    FractionBox["3", "2"]}, "Zeta"], "-", 
                  TemplateBox[{
                    FractionBox["5", "2"]}, "Zeta"]}], "\[LongEqual]", 
                RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "0"}], "\[Infinity]"], 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    FractionBox["1", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}]]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "k"}]}], ")"}], 
                    RowBox[{"5", "/", "2"}]]}]]}], "+", 
                    FractionBox["1", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "k"}]}], ")"}], 
                    RowBox[{"3", "/", "2"}]]}]]}], ")"}]}]}], HoldForm], 
             FrameStyle -> None, FrameMargins -> {{-1, -1}, {3, 3}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "AlternateSeriesRepresentations__More"}, {}]}], 
     XMLElement["infos", {"count" -> "2"}, {
       XMLElement["info", {"text" -> "(n m) is the binomial coefficient"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Binomial.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/GammaBetaErf/Binomial", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/BinomialCoefficient.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TemplateBox[{"n", "m"}, "Binomial"], "\" \"", 
                "\"is the binomial coefficient\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}], 
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://functions.wolfram.com/ZetaFunctionsandPolylogarithms/Zeta/\
06/ShowAll.html", "text" -> "More information"}, {}]}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {
   False, False, {False}, True}, Typeset`aux3$$ = {
   False, False, {False, False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {False, False, {False, False, False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "6", "datatypes" -> 
    "MathematicalFunctionIdentity,Sum", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "2.857", "parsetiming" -> "1.1", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSPa89061fdg40095a258hdb00004hf9d75h32b70e9b", "host" -> 
    "http://www4f.wolframalpha.com", "server" -> "46", "related" -> 
    "http://www4f.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa89071fdg40095a258hdb00000fd7c1eea715ci436761110708085623651", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2019, 4, 26, 22, 18, 31.8930144`9.256270473564673}, "Line" -> 
    13, "SessionID" -> 30700852957768230784}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = 
   "Sum from n=1 to infinity (n - 1)/(n^2*Sqrt[n])"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{962., {570., 580.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7653203119230213`*^9},ExpressionUUID->"2d5fba2a-9da2-4c42-b71b-\
a30ac02db7d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Sum from n=1 to infinity ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"Sqrt", "[", "n", "]"}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "794aa2a8-7628-486b-93f0-fb0ac1b37df9"]
}], "WolframAlphaLong",
 CellChangeTimes->{{3.7653218029612107`*^9, 3.7653218252564797`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"f25034ca-b25b-4576-8d96-01f7233c091a"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Sum from n=1 to infinity 1/(Sqrt[n])", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}, 
    PodStates -> {
     "PartialSums__More terms", "PartialSums__More terms", 
      "PartialSums__More terms", "PartialSums__More terms", 
      "PartialSums__More terms"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Sum", "id" -> "Result", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TagBox[
               FormBox[
                TagBox[
                 StyleBox[
                  RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"n", "=", "1"}], "\[Infinity]"], 
                    FractionBox["1", 
                    SqrtBox["n"]]}], ScriptLevel -> 0, StripOnInput -> False],
                  HoldForm], TraditionalForm], HoldForm], 
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[10], Selectable -> False], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"sum diverges\"", "\[NoBreak]", 
                 "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False]}, "RowDefault"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Convergence tests", "scanner" -> "Sum", "id" -> 
     "ConvergenceTests", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "3", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"The ratio test is inconclusive.\"", TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"The root test is inconclusive.\"", TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
           "\"By the comparison test, the series diverges.\"", 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Partial sum formula", "scanner" -> "Sum", "id" -> 
     "PartialSumFormula", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               TagBox[
                FormBox[
                 TagBox[
                  StyleBox[
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"n", "=", "1"}], "m"], 
                    FractionBox["1", 
                    SqrtBox["n"]]}], ScriptLevel -> 0, StripOnInput -> False],
                   HoldForm], TraditionalForm], HoldForm], 
               PolynomialForm[#, TraditionalOrder -> False]& ], 
              "\[LongEqual]", 
              TemplateBox[{"m", 
                FractionBox["1", "2"]}, "HarmonicNumber2", SyntaxForm -> 
               SubsuperscriptBox]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "H_n^(r) is the generalized harmonic number"}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://reference.wolfram.com/language/ref/HarmonicNumber.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> 
           "http://functions.wolfram.com/GammaBetaErf/HarmonicNumber2", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/HarmonicNumber.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                
                TemplateBox[{"n", "r"}, "HarmonicNumber2", SyntaxForm -> 
                 SubsuperscriptBox], "\" \"", 
                "\"is the generalized harmonic number\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Partial sums", "scanner" -> "Sum", "id" -> 
     "PartialSums", "position" -> "100", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ListLinePlot[Accumulate[Table[1/Sqrt[n], {n, 1, 161}]]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.009166666666666668], 
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]], 
                 LineBox[CompressedData["
1:eJxV0XlQlHUcx/FnRNhdL1guwTxWvAAVRVAIjf1wiHIIuxyruxx7IQatEpaI
lvXYFN4HKJcIYngNHuCtqOOKBpJHaFCmUkDFQoFKQB6AVuP390fPzDPPvOYz
7/n+8YzXpUYuHcRx3P5/3/++b59n0v9/ObQWST0iZH1kISofmX2QFTQIb21F
tiDbIv2nSxPSH4rIDhhIuHJv29jh5NEYcAsWyKytyBJUOp3sVH4qJjvBMsMi
oPyeNXkiSvpd1/B2tuTJcIrqfywNsSM7I1oRI3+YZk92RaOtsu/RtpHkaZCM
LG/fuM+B7IbtSY89nhx2JM8kjyK7Q9DvlB5c8g55Fh52Wy89mDWa7IEDBbGq
rE/HkD1hXbBp42btWPJs9KzyG/oG48hzEOGe5XpkuITsheIVoVkpGczeiNg3
dENnE/O7OGu+sjNqwXiyD7aFPve/cpR5LorDUmyDRjiR5+GzjsFxwlTm92Aw
Fd175y6zL9xSLrjlTp1AloL3KHp/ywZmIHWmV8vwFjIPvK62y3ObO5F2P5R+
cwoD2WTeD32G39I3trPdH7Kqd283+k6i3R+vTze2inaRuQDMK/0i16GV7QHw
caky2XpPpj0Q6pDQ2aJNZD4Qq1pdvd48YPt8HEtaYcU5T6F9PvgniljbdDIX
BKfAUM/A62wPwt4n5QF5ls60L0D4BzXVtrFkfgGsD53Pu36Q7Qvxc+sdz7Kn
bF+ID4eOrLnr7UJ7MPqFamev9WQ+GNqAI21tN9keAjMPl6h2S1faQ/CnqHHl
ewoyF4pzn5+y/6OQ7aEQFegaupvYHoY9ji+s1JOm0h4Gmdzy1YxkMrcIhpEN
2SnH2L4Ivua3Tlo/ZXs4RikVg6e5T6M9HI9jxoorV5K5CCjSfH2Mp9keAbjL
rvr1sF321p7T3xoyTPxI63P9IzIvg/+tNJvaU2SjDAd6rokVXWROjkF7oloM
M9yol8M+WepotZzMy/G9Te8s/zKyUY62v5NyzE1kLhI/9zhlxU2YQX0kDnQp
dcFqMh8Jmc+P7nf3kI2RMAra7TobyFwUCvKLRNHCmdRHQZB5fzs/icxHIb9i
1bB1/mRjFAyHLhlC1GQuGqqk9dntn7A+GuMfFClj81kfjYybbnklZ1gfjfiz
zY6VdayPwcsK77IjHayPgeveW0OWC92pj8GJnq9eCCaSjTHYuKLZda2UzCkw
ZuuY6BsqMhQoTPx4vGkV6xUYuBE299edrFegoj55/sWjrF+MwYkOvyRXs34x
6gWq0t4m1i8GP2GES3wf6xej/Y2D2X67WdQvgf2wTcZrM8hYgnBdZcfVYDK/
BNllGZZ79WTjEtxMG3dcsY71SmiHXgx6lst6JTrEo1XJFaxXIq9AoKuqZb0S
2ZN9f+hrYb0Kwox9U+37Wa9ChpdfvdjOg3oVHAozpU+nk40qeIi8Hp4IInOx
WF27a4RcTUYs1tYZAn9YzfrYf/+PZ7PvTtbHoviKzcItR1gfh9ylr366ZGR9
HL5sONVb94D1cej8vev5t89YH4fD6mVzy4Se1MdDV3zHIVVCRjw681+0OnqT
+XgkKn57VRZBNsZD8mPVYadlrE9A3WqRdP1nrE+AqX6dVU0O6xMg8PRP6TnG
+gQ8z2jOF91gvRqhR1Umi0esV6NUPG1fRxfr1XAxxQsvCWdTr8bl8q3JK8eR
OQ1euHULbOaQJRpYWXw8pSiMDA1C+r8eItaTNRoc773z14o1ZF4DeaG55PwO
cokGWy9Mutd+kN3TwFrWGCC4TG7SwMJw7ozlfXZfi/KjY9Rmbey+FrlZyeta
Bth9LTbvbl543GYO3deiq/fGS70LmdeiRi2vsZCSS7RYHlZryokmG7VI9Vm7
U5xCbtLC/URV75rPyZwOmWYOod/tJkt06LYadl1cRoYOCcWRO/yusvs6tFRU
NyXUs/s6hB1PNSW3s/s6/B6ZeV/3mt3XoWHHmrpgGy+6r8O5md0jxjmTOT0y
DY8rW+aRJXrIwnVcjpwMPW4PvBwyJ4ms0cO6LdG8ei2Z1yO79ozj/B3kEj0U
eyLSTpeSjXociu/2FF9g9/V41XBxa8Jtdj8R/mNHlxQ2sfuJ0Lj8nXOzxwv/
AAkIqGw=
                  "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
             DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.05]}}, AxesOrigin -> {1., 0.}, 
              PlotRange -> {{0, 161.}, {0., 23.95618569621854}}, 
              PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
              Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {1., 0.}, AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              FrameTicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10], 
              GridLines -> {None, None}, GridLinesStyle -> Automatic, 
              ImageSize -> 220., 
              LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
              Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0, 161.}, {0., 23.95618569621854}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.05]}}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              Ticks -> {Automatic, Automatic}, TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Fewer terms", "input" -> "PartialSums__Fewer terms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More terms", "input" -> "PartialSums__More terms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show points", "input" -> 
         "PartialSums__Show points"}, {}]}]}], Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Regularized result", "scanner" -> "Sum", "id" -> 
     "RegularizedSum", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> "Dirichlet regularization"}, {
       XMLElement[
       "minput", {}, {
        "Sum[1/Sqrt[n], {n, 1, Infinity}, Regularization -> \"Dirichlet\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 UnderscriptBox["lim", 
                  RowBox[{"s", "\[Rule]", "0"}]], "\[ThinSpace]", 
                 RowBox[{"(", 
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"n", "=", "1"}], "\[Infinity]"], 
                    SuperscriptBox["n", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"s"}]}], "-", 
                    RowBox[{"1", "/", "2"}]}]]}], ")"}]}], "\[LongEqual]", 
               TagBox[
                TemplateBox[{
                  FractionBox["1", "2"]}, "Zeta"], Identity]}], ScriptLevel -> 
             0, StripOnInput -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "\[Zeta](s) is the Riemann zeta function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Zeta.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> 
           "http://functions.wolfram.com/ZetaFunctionsandPolylogarithms/Zeta",
            "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/RiemannZetaFunction.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TemplateBox[{"s"}, "Zeta"], "\" \"", 
                "\"is the Riemann zeta function\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`aux1$$ = {False, False, {False}, True}, Typeset`aux2$$ = {
   False, False, {False, False, False}, True}, Typeset`aux3$$ = {
   False, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {
   False, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "5", "datatypes" -> 
    "Sum", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.929", 
    "parsetiming" -> "0.924", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa5242165fi7h2di0bd413000069ba2903eb8h2fhd", "host" -> 
    "http://www3.wolframalpha.com", "server" -> "46", "related" -> 
    "http://www3.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa5243165fi7h2di0bd41300001e65ecc6b6237aeg1150110531356813751", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2019, 4, 26, 22, 43, 48.2495303`9.43606794816475}, "Line" -> 
    20, "SessionID" -> 30700852957768230784}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = 
   False, Typeset`newq$$ = "Sum from n=1 to infinity 1/(Sqrt[n])"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{962., {394., 404.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.765321828271535*^9},ExpressionUUID->"18287562-5d1b-4416-93ac-\
4857e3afa6af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "x"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.765324889316226*^9, 3.7653249564066305`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"c099990f-43c4-4046-affe-162bcfcce947"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[ExponentialE]", "+", 
   RowBox[{"\[ExponentialE]", " ", 
    RowBox[{"(", 
     RowBox[{"x", "-", "1"}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[ExponentialE]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], "2"]}], "+", 
   RowBox[{
    FractionBox["1", "6"], " ", "\[ExponentialE]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], "3"]}], "+", 
   RowBox[{
    FractionBox["1", "24"], " ", "\[ExponentialE]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], "4"]}], "+", 
   RowBox[{
    FractionBox["1", "120"], " ", "\[ExponentialE]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], "5"]}], "+", 
   RowBox[{
    FractionBox["1", "720"], " ", "\[ExponentialE]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}], "6"]}], "+", 
   FractionBox[
    RowBox[{"\[ExponentialE]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "1"}], ")"}], "7"]}], "5040"], "+", 
   FractionBox[
    RowBox[{"\[ExponentialE]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "1"}], ")"}], "8"]}], "40320"], "+", 
   FractionBox[
    RowBox[{"\[ExponentialE]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "1"}], ")"}], "9"]}], "362880"], "+", 
   FractionBox[
    RowBox[{"\[ExponentialE]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "1"}], ")"}], "10"]}], "3628800"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"x", "-", "1"}], "]"}], "11"],
    SeriesData[$CellContext`x, 1, {}, 0, 11, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 1, {
   E, E, Rational[1, 2] E, Rational[1, 6] E, Rational[1, 24] E, 
    Rational[1, 120] E, Rational[1, 720] E, Rational[1, 5040] E, 
    Rational[1, 40320] E, Rational[1, 362880] E, Rational[1, 3628800] E}, 0, 
   11, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.7653249580139785`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"5ecc63f8-72b2-41c6-a4fa-35a986dfdffb"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["e", "x"], " ", "centered", " ", "at", " ", "1"}], 
  TraditionalForm]],
 FormatType->
  "TraditionalForm",ExpressionUUID->"be52296e-b9a0-47ec-a49f-e8fb490ed00e"]], \
"WolframAlphaLong",
 CellChangeTimes->{{3.76532543306188*^9, 3.7653254592880077`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"f4728f6c-d41b-495b-b5b3-ae3eaadce3af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"n", "!"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "+", "1"}], ")"}], "!"}]], ",", 
   RowBox[{"n", "\[Rule]", " ", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.765325825731964*^9, 3.7653258510642943`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"599ed35f-a552-4e26-89d0-9917fb9769bf"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.765325851988042*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"bef4f5c6-a3b4-4c15-9621-3ce0c3fa156d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{"SumConvergence", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"\[ExponentialE]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "1"}], ")"}], "n"]}], 
     RowBox[{"n", "!"}]], ",", "n"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7653271629922023`*^9, 3.765327173605351*^9}, {
  3.765327203937204*^9, 3.7653272918178153`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"40e7f2bd-a239-4a02-b008-5fb76d88d165"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumConvergence", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["n", 
     RowBox[{"-", "1.4"}]], "+", 
    RowBox[{"3", "*", 
     SuperscriptBox["n", 
      RowBox[{"-", "1.2"}]]}]}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.7653277687737703`*^9, 3.7653278031414323`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"a65cf87c-0ca5-41cd-8269-6fff56cec660"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7653278038918943`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"796c0da8-88c4-4708-9058-f9c11263700c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Together", "[", 
  RowBox[{
   SuperscriptBox["n", 
    RowBox[{"-", "1.4"}]], "+", 
   RowBox[{"3", "*", 
    SuperscriptBox["n", 
     RowBox[{"-", "1.2"}]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7653278199332743`*^9, 3.765327824513802*^9}, {
  3.7653278755841804`*^9, 3.76532787660741*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"981c52e2-95c3-47e2-8fac-ca2de456b7e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["n", "1.2`"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["n", "1.4`"]}]}], 
    SuperscriptBox["n", "2.5999999999999996`"]], ",", 
   RowBox[{"n", "\[Rule]", " ", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76532806163271*^9, 3.765328084854912*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"db27c1d6-dea2-4064-a679-37be5c7fd814"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.7653280853420186`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"21d132ed-aa6e-42fc-a8c5-62ddb328c160"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Sum from n=1 to infinity (n^-1.4 + 3 n^-1.2)", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "PartialSumFormula", "Partial sum formula", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}, 
      "ExtrusionOpen" -> True}}, Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods"}, Typeset`pod1$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "100", "primary" -> "true", "scanner" -> "Sum", "title" -> 
     "Infinite sum"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Sum[n^(-1.4) + 3/n^1.2, {n, 1, Infinity}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              RowBox[{
                RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
                  RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox["n", "1.4`"]], "+", 
                    FractionBox["3", 
                    SuperscriptBox["n", "1.2`"]]}], ")"}]}], "\[LongEqual]", 
                TagBox["19.880294601510837`", Identity]}]}, "RowDefault"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "ConvergenceTests", "numsubpods" -> 
     "3", "position" -> "200", "primary" -> "true", "scanner" -> "Sum", 
     "title" -> "Convergence tests"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"The ratio test is inconclusive.\"", TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"The root test is inconclusive.\"", TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
           "\"By the comparison test, the series converges.\"", 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "PartialSumFormula", "numsubpods" -> 
     "1", "position" -> "300", "scanner" -> "Sum", "title" -> 
     "Partial sum formula"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               TagBox[
                FormBox[
                 TagBox[
                  StyleBox[
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"n", "=", "1"}], "m"], 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    SuperscriptBox["n", "1.4`"]], "+", 
                    FractionBox["3", 
                    SuperscriptBox["n", "1.2`"]]}], ")"}]}], ScriptLevel -> 0,
                    StripOnInput -> False], HoldForm], TraditionalForm], 
                HoldForm], PolynomialForm[#, TraditionalOrder -> False]& ], 
              "\[TildeTilde]", 
              RowBox[{
                RowBox[{"3", " ", 
                  
                  TemplateBox[{"m", "1.2`"}, "HarmonicNumber2", SyntaxForm -> 
                   SubsuperscriptBox]}], "+", 
                
                TemplateBox[{"m", "1.4`"}, "HarmonicNumber2", SyntaxForm -> 
                 SubsuperscriptBox]}]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "H_n^(r) is the generalized harmonic number"}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://reference.wolfram.com/language/ref/HarmonicNumber.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> 
           "http://functions.wolfram.com/GammaBetaErf/HarmonicNumber2", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/HarmonicNumber.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                
                TemplateBox[{"n", "r"}, "HarmonicNumber2", SyntaxForm -> 
                 SubsuperscriptBox], "\" \"", 
                "\"is the generalized harmonic number\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "PartialSums", "numsubpods" -> "1", 
     "position" -> "400", "scanner" -> "Sum", "title" -> "Partial sums"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ListLinePlot[Accumulate[Table[n^(-1.4) + 3/n^1.2, {n, 1, 6}]]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]], 
                 
                 LineBox[{{1., 4.}, {2., 5.684754986571786}, {3., 
                  6.7022945533244345`}, {4., 7.414275560140463}, {5., 
                  7.954204470523231}, {6., 8.385011253564118}}]}}, {{
                 Directive[
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1], 
                  PointSize[Medium]], 
                 GeometricTransformationBox[
                  InsetBox[
                   BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", FontSize -> Rational[50, 7], 
                    StripOnInput -> False], TraditionalForm]], {0., 0.}], {{{
                  1., 4.}}, {{2., 5.684754986571786}}, {{3., 
                  6.7022945533244345`}}, {{4., 7.414275560140463}}, {{5., 
                  7.954204470523231}}, {{6., 
                  8.385011253564118}}}]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
             DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.05]}}, AxesOrigin -> {1., 0.}, 
              PlotRange -> {{0, 6.}, {0., 8.385011253564118}}, 
              PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
              Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {1., 0.}, AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              FrameTicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10], 
              GridLines -> {None, None}, GridLinesStyle -> Automatic, 
              ImageSize -> 220., 
              LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
              Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0, 6.}, {0., 8.385011253564118}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.05]}}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              Ticks -> {Automatic, Automatic}, TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More terms", "input" -> "PartialSums__More terms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show points", "input" -> 
         "PartialSums__Show points"}, {}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False, False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "4", "datatypes" -> 
    "Sum", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.477", 
    "parsetiming" -> "0.777", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa4251233ce21i9dc0i5500001c1e924551h6bi9h", "host" -> 
    "http://www4d.wolframalpha.com", "server" -> "44", "related" -> 
    "http://www4d.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa4261233ce21i9dc0i55000012d750327f2b4aif1106293366827887403", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2019, 4, 27, 0, 29, 28.8701023`9.2130232355769}, "Line" -> 46, 
    "SessionID" -> 30700852957768230784}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "PartialSumFormula", "Partial sum formula", 1, 1, "Content"}, 
   Typeset`open$$ = True, Typeset`newq$$ = 
   "Sum from n=1 to infinity (n^-1.4 + 3 n^-1.2)"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1120., {1311., 35.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[46]:=",ExpressionUUID->"db9f9991-5b32-4d96-971a-2a97489e07b9"],

Cell[BoxData["19.880294601510837`"], "Output",
 CellChangeTimes->{3.7653281694482307`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"a62662ad-ce4b-4983-b6a9-ed30ad75ca0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["3", "n"], "+", 
    RowBox[{"4", "/", 
     SuperscriptBox["2", "n"]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.765330121307721*^9, 3.7653301500648484`*^9}, {
  3.7653304755342007`*^9, 3.765330492287905*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"3e5cf0f8-4d9b-4154-8fea-a085441ab538"],

Cell[BoxData[
 TemplateBox[{
  "Sum","div","\"Sum does not converge.\"",2,48,4,30700852957768230784,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.765330150928028*^9, 3.76533049435937*^9},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"6aa3a02f-4e61-4d00-876e-54a8fa376753"],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"2", "-", "n"}]], "+", 
    SuperscriptBox["3", "n"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7653301512771077`*^9, 3.765330494370373*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"4479ff3d-6bdb-41b5-a2fb-dd42c008b6a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  FractionBox["1", 
   RowBox[{
    RowBox[{"2", "n"}], "+", "3"}]]}]], "Input",
 CellChangeTimes->{{3.765330683668965*^9, 3.765330702912032*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"9d11a1e2-f43e-46f8-a630-279c5cd20bf2"],

Cell[BoxData[
 TemplateBox[{
  "Sum","div","\"Sum does not converge.\"",2,49,5,30700852957768230784,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7653307039602594`*^9},
 CellLabel->
  "During evaluation of \
In[49]:=",ExpressionUUID->"0eacccf7-3ac4-4f45-975e-f30a4cc6e25c"],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  FractionBox["1", 
   RowBox[{"3", "+", 
    RowBox[{"2", " ", "n"}]}]]}]], "Output",
 CellChangeTimes->{3.7653307039702616`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"2f3f4552-8e88-4bd1-97a6-57f695e54337"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"n", "+", "1"}], ")"}], "3"], "]"}]], "Input",
 CellChangeTimes->{{3.7653311524220247`*^9, 3.765331170680648*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"7dbb620c-ec7e-4189-b017-7f83e976a325"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"3", " ", "n"}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["n", "2"]}], "+", 
  SuperscriptBox["n", "3"]}]], "Output",
 CellChangeTimes->{3.7653311711883354`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"c6a474cf-3bb2-49e9-85ae-b73807620b52"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"An", "=", 
   FractionBox[
    RowBox[{"n", "+", "2"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"n", "+", "1"}], ")"}], "3"]]}], ";"}]], "Input",
 CellChangeTimes->{{3.765331303142529*^9, 3.765331326632631*^9}, {
  3.765331917131146*^9, 3.7653319260663977`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"61c67d1f-ccd3-40ca-882b-d98afdbe1f86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bn", "=", 
   FractionBox["n", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"n", "+", "1"}], ")"}], "3"]]}], ";"}]], "Input",
 CellChangeTimes->{{3.765331478833722*^9, 3.765331479009635*^9}, {
  3.7653318734376535`*^9, 3.7653319106277084`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"e15f2c82-56bb-4c2f-92f5-a025834afe94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox["An", "Bn"], ",", 
   RowBox[{"n", "\[Rule]", " ", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7653316900900993`*^9, 3.765331700269704*^9}, {
  3.765331933386559*^9, 3.765331945808683*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"a045ccba-7f45-4e5c-88aa-22ef20be8285"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.765331700730807*^9, 3.76533194623978*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"eb3e9c3e-d75c-44ef-9aa7-90fdd944a499"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "2"}], "\[Infinity]"], 
  FractionBox[
   SqrtBox["n"], 
   RowBox[{"n", "-", "1"}]]}]], "Input",
 CellChangeTimes->{{3.7653370843990545`*^9, 3.7653371723719234`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"23d878f5-b7ca-4651-81ef-d35e3092f72c"],

Cell[BoxData[
 TemplateBox[{
  "Sum","div","\"Sum does not converge.\"",2,4,2,30700983832900254057,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7653371741669755`*^9},
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"95c7b50b-770a-494e-b54f-1b1e29413b07"],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "2"}], "\[Infinity]"], 
  FractionBox[
   SqrtBox["n"], 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]]}]], "Output",
 CellChangeTimes->{3.765337174200907*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"4a356828-7512-4490-9e54-94f9184147ce"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "2"}], "\[Infinity]"], 
  FractionBox[
   SqrtBox["n"], "n"]}]], "Input",
 CellChangeTimes->{{3.7653372730031395`*^9, 3.7653372736882954`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7347d058-c22a-4bf5-b3e2-e095e3b90cd6"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "sum from n=2 to infinity 1/Sqrt[n]", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Result", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}, 
      "ExtrusionOpen" -> True}}, Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods"}, Typeset`pod1$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "100", "primary" -> "true", "scanner" -> "Sum", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TagBox[
               FormBox[
                TagBox[
                 StyleBox[
                  RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"n", "=", "2"}], "\[Infinity]"], 
                    FractionBox["1", 
                    SqrtBox["n"]]}], ScriptLevel -> 0, StripOnInput -> False],
                  HoldForm], TraditionalForm], HoldForm], 
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[10], Selectable -> False], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"sum diverges\"", "\[NoBreak]", 
                 "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}, StripOnInput -> False]}, "RowDefault"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "ConvergenceTests", "numsubpods" -> 
     "3", "position" -> "200", "primary" -> "true", "scanner" -> "Sum", 
     "title" -> "Convergence tests"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"The ratio test is inconclusive.\"", TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"The root test is inconclusive.\"", TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
           "\"By the comparison test, the series diverges.\"", 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "PartialSumFormula", "numsubpods" -> 
     "1", "position" -> "300", "scanner" -> "Sum", "title" -> 
     "Partial sum formula"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               TagBox[
                FormBox[
                 TagBox[
                  StyleBox[
                   RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"n", "=", "2"}], "m"], 
                    FractionBox["1", 
                    SqrtBox["n"]]}], ScriptLevel -> 0, StripOnInput -> False],
                   HoldForm], TraditionalForm], HoldForm], 
               PolynomialForm[#, TraditionalOrder -> False]& ], 
              "\[LongEqual]", 
              RowBox[{
                TemplateBox[{"m", 
                  FractionBox["1", "2"]}, "HarmonicNumber2", SyntaxForm -> 
                 SubsuperscriptBox], "-", "1"}]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "H_n^(r) is the generalized harmonic number"}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://reference.wolfram.com/language/ref/HarmonicNumber.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> 
           "http://functions.wolfram.com/GammaBetaErf/HarmonicNumber2", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/HarmonicNumber.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                
                TemplateBox[{"n", "r"}, "HarmonicNumber2", SyntaxForm -> 
                 SubsuperscriptBox], "\" \"", 
                "\"is the generalized harmonic number\""}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "PartialSums", "numsubpods" -> "1", 
     "position" -> "400", "scanner" -> "Sum", "title" -> "Partial sums"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ListLinePlot[Accumulate[Table[1/Sqrt[n], {n, 2, 7}]]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]], 
                 
                 LineBox[{{2., 0.7071067811865475}, {3., 
                  1.2844570503761732`}, {4., 1.7844570503761732`}, {5., 
                  2.2316706458761315`}, {6., 2.639918936339994}, {7., 
                  3.0178834093492215`}}]}}, {{
                 Directive[
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1], 
                  PointSize[Medium]], 
                 GeometricTransformationBox[
                  InsetBox[
                   BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", FontSize -> Rational[50, 7], 
                    StripOnInput -> False], TraditionalForm]], {0., 0.}], {{{
                  2., 0.7071067811865475}}, {{3., 1.2844570503761732`}}, {{4.,
                   1.7844570503761732`}}, {{5., 2.2316706458761315`}}, {{6., 
                  2.639918936339994}}, {{7., 
                  3.0178834093492215`}}}]}, {}}}, {}, {}, {{}, {}}, {{}, \
{}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.05]}}, AxesOrigin -> {2., 0.}, 
              PlotRange -> {{2., 7.}, {0., 3.0178834093492215`}}, 
              PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
              Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {2., 0.}, AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              FrameTicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10], 
              GridLines -> {None, None}, GridLinesStyle -> Automatic, 
              ImageSize -> 220., 
              LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
              Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{2., 7.}, {0., 3.0178834093492215`}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.05]}}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              Ticks -> {Automatic, Automatic}, TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More terms", "input" -> "PartialSums__More terms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show points", "input" -> 
         "PartialSums__Show points"}, {}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False, False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "4", "datatypes" -> 
    "Sum", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.942", 
    "parsetiming" -> "0.982", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa1593914h4956c07e6f8de00001738778e89378hei", "host" -> 
    "http://www3.wolframalpha.com", "server" -> "49", "related" -> 
    "http://www3.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa1594014h4956c07e6f8de00003i36ha5564b50fdg1127199754393067178", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2019, 4, 27, 3, 2, 3.0831625`8.241571396068283}, "Line" -> 6, 
    "SessionID" -> 30700983832900254057}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Content"}, Typeset`open$$ = True, 
   Typeset`newq$$ = "sum from n=2 to infinity 1/Sqrt[n]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1120., {1235., 35.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[6]:=",ExpressionUUID->"8ef48f66-d6c5-496f-b694-2baebb0d9f59"],

Cell[BoxData[
 InterpretationBox[
  FrameBox[
   StyleBox[
    FormBox[
     TemplateBox[{TagBox[
        FormBox[
         TagBox[
          StyleBox[
           RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"n", "=", "2"}], "\[Infinity]"], 
             FractionBox["1", 
              SqrtBox["n"]]}], ScriptLevel -> 0, StripOnInput -> False], 
          HoldForm], TraditionalForm], HoldForm],InterpretationBox[
        StyleBox[
         GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
         "CacheGraphics" -> False], 
        Spacer[10], Selectable -> False],StyleBox[
        RowBox[{
         "\"(\"", "\[NoBreak]", "\"sum diverges\"", "\[NoBreak]", "\")\""}], {
         GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
         LineIndent -> 0}, StripOnInput -> False]},
      "RowDefault"],
     TraditionalForm], "Output",
    CellSize->{550, Automatic},
    AutoStyleOptions->{"HighlightFormattingErrors"->False},
    ScriptLevel->0,
    NumberPoint->".",
    RenderingOptions->{"3DRenderingMethod"->"BSPTreeOrDepthBuffer"},
    FontFamily->"Times",
    FontSize->14,
    Background->None,
    GraphicsBoxOptions->{DefaultAxesStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsAxes"],
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics"},
    DefaultFrameStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsFrame"],
    DefaultFrameTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"],
    DefaultTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]},
    Graphics3DBoxOptions->{
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics3D"}}],
   BaseStyle->{Plain},
   FrameMargins->10,
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False],
  WolframAlphaResult[
  "sum from n=2 to infinity 1/Sqrt[n]", {{"Result", 1}, 
    "Content"}]]], "Output",
 CellChangeTimes->{3.765337324916587*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"f8c1a72a-6e3a-45ae-b0ef-669cef185476"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["n", 
     FractionBox["5", "2"]], "/", 
    RowBox[{"(", 
     RowBox[{"n", "-", "1"}], ")"}]}], ",", 
   RowBox[{"n", "\[Rule]", " ", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7653376403917575`*^9, 3.7653376757658815`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"30d0fa3e-bb4d-4b95-a1e2-64bb9e8c80b6"],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.7653376766515107`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"c8ae368a-0e15-45b5-9d00-101783b49dc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrueQ", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"(", 
     RowBox[{"n", "-", "1"}], ")"}], 
    RowBox[{
     SuperscriptBox["n", "2"], "*", 
     SqrtBox["n"]}]], "\[GreaterEqual]", 
   FractionBox["1", 
    SqrtBox["n"]]}], "]"}]], "Input",
 CellChangeTimes->{{3.7653381322132425`*^9, 3.7653382278913584`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2c5b4121-2c43-4970-96bb-9795261b671b"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.765338228296444*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"b9996cea-5455-4191-8405-6cbcff057be6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.765338239963908*^9, 3.76533826860794*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"f297dada-ffe1-4ba1-92b1-e282bbe50816"],

Cell[BoxData[
 RowBox[{
  RowBox[{"An", "=", " ", 
   FractionBox[
    RowBox[{"n", "-", "1"}], 
    RowBox[{
     SuperscriptBox["n", "2"], "*", 
     SqrtBox["n"]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7653382939442453`*^9, 3.765338320887915*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"12ab1a4e-dc10-4ee9-83a9-71aab805987d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bn", " ", "=", " ", 
   FractionBox["1", 
    SqrtBox["n"]]}], ";"}]], "Input",
 CellChangeTimes->{{3.7653383231013985`*^9, 3.7653383388677197`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"20f68e9a-f1bb-449e-9b71-8063dbb8f370"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox["An", "Bn"], ",", 
   RowBox[{"n", "\[Rule]", " ", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.765338342046382*^9, 3.765338361516503*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"2c8db89c-3e57-4a24-aa53-171bbde5481e"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.765338363218851*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"624389ad-f6c7-43f2-b62d-ddd6b64e0399"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], "An"}]], "Input",
 CellChangeTimes->{{3.765338507703559*^9, 3.765338519774186*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"14b8ab9d-c52c-4356-b4fe-787b030620b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Zeta", "[", 
   FractionBox["3", "2"], "]"}], "-", 
  RowBox[{"Zeta", "[", 
   FractionBox["5", "2"], "]"}]}]], "Output",
 CellChangeTimes->{3.765338520852412*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"57ad027b-3b48-42a9-b709-2cbf2458dce7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1.4", "-", "2.6"}]], "Input",
 CellChangeTimes->{{3.7653390540286913`*^9, 3.7653390641008115`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"15ea70db-c63f-4593-b7e3-2073fb791e43"],

Cell[BoxData[
 RowBox[{"-", "1.2000000000000002`"}]], "Output",
 CellChangeTimes->{3.7653390649319663`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"e7b6f0a0-f779-4183-ba12-88b051112f0a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"An", "=", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["n", 
      RowBox[{"-", "1.4"}]], "+", 
     SuperscriptBox["n", 
      RowBox[{"-", "1.2"}]]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7653392458305645`*^9, 3.7653392856329546`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"395e755f-eb12-4e4b-8791-2fa7c1901393"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bn", "=", " ", 
   RowBox[{"(", 
    FractionBox["3", 
     SuperscriptBox["n", "1.2"]], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.765339288229497*^9, 3.765339313573826*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"3a5c1840-8789-4c99-8505-d310166384d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox["An", "Bn"], ",", 
   RowBox[{"n", "\[Rule]", " ", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.765339315620253*^9, 3.7653393314285746`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"3d04cdc1-8f20-477d-afde-016b702fd146"],

Cell[BoxData["0.3333333333333333`"], "Output",
 CellChangeTimes->{3.7653393319366736`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"fe7f648a-0cae-4f2f-95dd-41596a8e799e"]
}, Open  ]]
},
WindowSize->{1095, 1153},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"ReverseColor.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 438, 12, 139, "Input",ExpressionUUID->"71008859-bb16-40a4-a692-3a81f0009def"],
Cell[1021, 36, 362, 9, 110, "Message",ExpressionUUID->"574a9350-e195-4061-ba52-00a0ac9fd862"]
}, Open  ]],
Cell[1398, 48, 400, 11, 125, "Input",ExpressionUUID->"54bce082-0f24-4c33-895d-1a93e8ef8485"],
Cell[CellGroupData[{
Cell[1823, 63, 267, 5, 90, "Input",ExpressionUUID->"b6d24b20-2ad1-4029-823d-b12a0f45c5df"],
Cell[2093, 70, 153, 2, 97, "Output",ExpressionUUID->"b2968d31-20da-4b5d-a6bb-7519ceac9b4d"]
}, Open  ]],
Cell[2261, 75, 209, 3, 90, "Input",ExpressionUUID->"e6ee850c-e0c0-4fa8-98f2-33d558b1de42"],
Cell[2473, 80, 392, 11, 105, "Input",ExpressionUUID->"1fb1f48e-28e2-4ac1-bbb6-b40cdfdfc60d"],
Cell[CellGroupData[{
Cell[2890, 95, 264, 5, 90, "Input",ExpressionUUID->"7924ed9b-e238-4241-b554-e2c556036465"],
Cell[3157, 102, 155, 2, 97, "Output",ExpressionUUID->"44b40770-b1c3-4e44-a0a5-a1f87fc2ca41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3349, 109, 323, 7, 116, "Input",ExpressionUUID->"399c232f-a199-4c79-8978-a9ac9e2ca5b6"],
Cell[3675, 118, 149, 2, 97, "Output",ExpressionUUID->"4f35822a-4ddc-4136-b849-043463f259f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3861, 125, 328, 8, 139, "Input",ExpressionUUID->"1aa3644d-7855-44bb-8b5c-7819e1ec6cb9"],
Cell[4192, 135, 186, 3, 97, "Output",ExpressionUUID->"7daa4e78-69f2-4b0b-8592-616b21af998b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4415, 143, 345, 8, 162, "Input",ExpressionUUID->"5a1c73d2-0c51-48e6-b2ae-b6a8fa48f2fe"],
Cell[4763, 153, 178, 2, 97, "Output",ExpressionUUID->"40962c40-e0fb-4a7d-b6d8-b1d36f8f7f0c"]
}, Open  ]],
Cell[4956, 158, 452, 10, 109, "WolframAlphaLong",ExpressionUUID->"96728a5f-a5bc-4ad3-9290-747cb549c65b"],
Cell[5411, 170, 456, 13, 139, "Input",ExpressionUUID->"77ebb67d-76d9-4ce9-b3db-97c47743d7a9"],
Cell[5870, 185, 469, 13, 129, "Input",ExpressionUUID->"1c396df5-3190-4c68-8e5a-fadf96dd028a"],
Cell[6342, 200, 532, 15, 132, "Input",ExpressionUUID->"5cacae0d-b8ca-408d-862f-f781b2c53459"],
Cell[CellGroupData[{
Cell[6899, 219, 330, 7, 118, "Input",ExpressionUUID->"3f7a6349-183d-4367-a435-e4047fa75639"],
Cell[7232, 228, 171, 3, 120, "Output",ExpressionUUID->"098aab84-6393-45a0-aaca-95931be0c83d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7440, 236, 422, 12, 139, "Input",ExpressionUUID->"5765331a-9456-4057-a57d-3470a8688e8b"],
Cell[7865, 250, 301, 8, 80, "Message",ExpressionUUID->"41b06055-2956-48c1-b5b4-3c1bd828770d"],
Cell[8169, 260, 401, 12, 145, "Output",ExpressionUUID->"bcf2ca6d-1f7d-4185-a6ec-4c7b930568dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8607, 277, 25471, 492, 1264, "WolframAlphaShortInput",ExpressionUUID->"6cd2e3b5-910c-4b3b-855f-fd507c13f2a8"],
Cell[34081, 771, 2383, 62, 195, "Output",ExpressionUUID->"0e612ee4-71ab-4273-b641-0a85fc225750"]
}, Open  ]],
Cell[36479, 836, 225, 3, 90, "Input",ExpressionUUID->"409ada42-ad2a-4c73-b42d-e7d34a535368"],
Cell[36707, 841, 383, 11, 125, "Input",ExpressionUUID->"eb386fc5-3216-4c63-8e58-abfcf603617c"],
Cell[37093, 854, 478, 14, 129, "Input",ExpressionUUID->"2aef2a9f-d16d-4457-8518-11df967dfeae"],
Cell[CellGroupData[{
Cell[37596, 872, 330, 7, 118, "Input",ExpressionUUID->"c7490aac-b711-486d-ae4c-59730f854a1d"],
Cell[37929, 881, 149, 2, 97, "Output",ExpressionUUID->"5f89016a-dac2-4eec-8288-527049b0c5b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38115, 888, 518, 16, 124, "Input",ExpressionUUID->"d0a2f1ec-ac2a-497a-bd95-965dadc95297"],
Cell[38636, 906, 446, 15, 126, "Output",ExpressionUUID->"a8c5aa74-6f8a-48e4-aab6-e9a879523150"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39119, 926, 469, 15, 124, "Input",ExpressionUUID->"c3684fc6-c01c-4bac-b6e5-305a0c7469b1"],
Cell[39591, 943, 444, 15, 126, "Output",ExpressionUUID->"aa6fdc1f-cc3d-450b-bdc5-1fdcbfa6cf58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40072, 963, 562, 19, 124, "Input",ExpressionUUID->"7b3552c3-49d1-4276-a0ac-06bd8032a902"],
Cell[40637, 984, 832, 24, 183, "Output",ExpressionUUID->"48af8ee3-b412-43cf-9ec9-74e095dd9e32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41506, 1013, 473, 16, 124, "Input",ExpressionUUID->"d83f76ae-eb3e-4f1d-87ea-6401c116d43e"],
Cell[41982, 1031, 217, 5, 121, "Output",ExpressionUUID->"eb1583e0-935f-4e50-baf1-5071654eecd9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42236, 1041, 463, 13, 140, "Input",ExpressionUUID->"bc2b8be9-d382-4272-a14e-11097daa1b53"],
Cell[42702, 1056, 786, 21, 182, "Output",ExpressionUUID->"fd8ce937-fadb-44b0-9ff6-fae2cfb4b0f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43525, 1082, 196, 2, 93, "WolframAlphaLong",ExpressionUUID->"24703e7d-5cbc-4ccb-b525-b6579d9304dd"],
Cell[43724, 1086, 60588, 1244, 2188, "Print",ExpressionUUID->"437a386d-2d6d-4bde-adc6-a363d9deb133"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104349, 2335, 724, 20, 144, "Input",ExpressionUUID->"83ec9156-ef47-4c08-9e1a-a2ad0803b1f0"],
Cell[105076, 2357, 201, 3, 97, "Output",ExpressionUUID->"c30015f6-c461-4eb7-9588-a8bcfab22464"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105314, 2365, 600, 18, 144, "Input",ExpressionUUID->"c0d1d77b-7f64-4c80-81ac-0043685c3abc"],
Cell[105917, 2385, 473, 15, 129, "Output",ExpressionUUID->"123fecb9-bccd-4397-bd3b-b4dc04032b52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106427, 2405, 353, 9, 96, "Input",ExpressionUUID->"9fe9fd95-03f9-457e-8f73-e8b565e3c3c1"],
Cell[106783, 2416, 241, 5, 97, "Output",ExpressionUUID->"14be8926-1c7a-4027-8349-188c28ccfb4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107061, 2426, 360, 10, 96, "Input",ExpressionUUID->"bf6b6ce2-d3aa-46bb-8376-508dcbd5dba3"],
Cell[107424, 2438, 278, 7, 97, "Output",ExpressionUUID->"4f82622b-7cf2-47ed-9471-9ce5700f064e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107739, 2450, 205, 2, 93, "WolframAlphaLong",ExpressionUUID->"bd29d51b-5088-41de-8b12-558b3127e1d6"],
Cell[107947, 2454, 41217, 872, 1748, "Print",ExpressionUUID->"0e743c14-4541-4e3e-ab85-c698589e4b37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149201, 3331, 205, 3, 90, "Input",ExpressionUUID->"08947094-375c-471c-bdc5-e77339f3394e"],
Cell[149409, 3336, 150, 2, 97, "Output",ExpressionUUID->"6ebc58ad-581f-4e4e-a521-96260df8d8a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149596, 3343, 196, 3, 90, "Input",ExpressionUUID->"1a491313-fe9b-45ab-a307-4e16b19c0f86"],
Cell[149795, 3348, 150, 2, 97, "Output",ExpressionUUID->"6070e644-bd35-4e24-99e2-81327e0fa9ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149982, 3355, 193, 2, 93, "WolframAlphaLong",ExpressionUUID->"60e2922b-76a9-4023-9a62-3d0aca4df6d3"],
Cell[150178, 3359, 60707, 1223, 2076, "Print",ExpressionUUID->"24ead2cd-d82f-4957-85ce-1e43b44f32e9"]
}, Open  ]],
Cell[210900, 4585, 225, 3, 123, "Input",ExpressionUUID->"483864c4-c5fa-4f87-8771-7f5dce65240e"],
Cell[211128, 4590, 445, 13, 120, "Input",ExpressionUUID->"44c7a9a6-fdb8-4697-96f9-e20e010611be"],
Cell[211576, 4605, 552, 17, 129, "Input",ExpressionUUID->"e29d295b-8bd8-4884-931a-8ee7ad63002f"],
Cell[CellGroupData[{
Cell[212153, 4626, 232, 4, 118, "Input",ExpressionUUID->"ef22aa5a-94c2-41b9-97a7-c5b2fb2b9bf2"],
Cell[212388, 4632, 287, 8, 121, "Output",ExpressionUUID->"06b5a45e-44d6-492e-986f-5cccbfa68436"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212712, 4645, 545, 15, 100, "WolframAlphaLong",ExpressionUUID->"f1e324ae-7ad4-472f-beea-8f1e0aba8ce6"],
Cell[213260, 4662, 39582, 825, 1202, "Print",ExpressionUUID->"2d5fba2a-9da2-4c42-b71b-a30ac02db7d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252879, 5492, 441, 11, 93, "WolframAlphaLong",ExpressionUUID->"f25034ca-b25b-4576-8d96-01f7233c091a"],
Cell[253323, 5505, 26241, 528, 850, "Print",ExpressionUUID->"18287562-5d1b-4416-93ac-4857e3afa6af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279601, 6038, 328, 7, 90, "Input",ExpressionUUID->"c099990f-43c4-4046-affe-162bcfcce947"],
Cell[279932, 6047, 2195, 64, 253, "Output",ExpressionUUID->"5ecc63f8-72b2-41c6-a4fa-35a986dfdffb"]
}, Open  ]],
Cell[282142, 6114, 399, 9, 93, "WolframAlphaLong",ExpressionUUID->"f4728f6c-d41b-495b-b5b3-ae3eaadce3af"],
Cell[CellGroupData[{
Cell[282566, 6127, 388, 10, 122, "Input",ExpressionUUID->"599ed35f-a552-4e26-89d0-9917fb9769bf"],
Cell[282957, 6139, 149, 2, 97, "Output",ExpressionUUID->"bef4f5c6-a3b4-4c15-9621-3ce0c3fa156d"]
}, Open  ]],
Cell[283121, 6144, 486, 12, 121, "Input",ExpressionUUID->"40e7f2bd-a239-4a02-b008-5fb76d88d165"],
Cell[CellGroupData[{
Cell[283632, 6160, 388, 10, 96, "Input",ExpressionUUID->"a65cf87c-0ca5-41cd-8269-6fff56cec660"],
Cell[284023, 6172, 154, 2, 97, "Output",ExpressionUUID->"796c0da8-88c4-4708-9058-f9c11263700c"]
}, Open  ]],
Cell[284192, 6177, 401, 10, 96, "Input",ExpressionUUID->"981c52e2-95c3-47e2-8fac-ca2de456b7e9"],
Cell[CellGroupData[{
Cell[284618, 6191, 448, 11, 127, "Input",ExpressionUUID->"db27c1d6-dea2-4064-a679-37be5c7fd814"],
Cell[285069, 6204, 153, 2, 97, "Output",ExpressionUUID->"21d132ed-aa6e-42fc-a8c5-62ddb328c160"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285259, 6211, 19973, 402, 1412, "WolframAlphaShortInput",ExpressionUUID->"db9f9991-5b32-4d96-971a-2a97489e07b9"],
Cell[305235, 6615, 169, 2, 97, "Output",ExpressionUUID->"a62662ad-ce4b-4983-b6a9-ed30ad75ca0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305441, 6622, 439, 11, 139, "Input",ExpressionUUID->"3e5cf0f8-4d9b-4154-8fea-a085441ab538"],
Cell[305883, 6635, 322, 8, 80, "Message",ExpressionUUID->"6aa3a02f-4e61-4d00-876e-54a8fa376753"],
Cell[306208, 6645, 387, 10, 145, "Output",ExpressionUUID->"4479ff3d-6bdb-41b5-a2fb-dd42c008b6a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306632, 6660, 326, 8, 139, "Input",ExpressionUUID->"9d11a1e2-f43e-46f8-a630-279c5cd20bf2"],
Cell[306961, 6670, 303, 8, 80, "Message",ExpressionUUID->"0eacccf7-3ac4-4f45-975e-f30a4cc6e25c"],
Cell[307267, 6680, 310, 8, 145, "Output",ExpressionUUID->"2f3f4552-8e88-4bd1-97a6-57f695e54337"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307614, 6693, 279, 6, 96, "Input",ExpressionUUID->"7dbb620c-ec7e-4189-b017-7f83e976a325"],
Cell[307896, 6701, 288, 7, 97, "Output",ExpressionUUID->"c6a474cf-3bb2-49e9-85ae-b73807620b52"]
}, Open  ]],
Cell[308199, 6711, 390, 10, 126, "Input",ExpressionUUID->"61c67d1f-ccd3-40ca-882b-d98afdbe1f86"],
Cell[308592, 6723, 367, 9, 122, "Input",ExpressionUUID->"e15f2c82-56bb-4c2f-92f5-a025834afe94"],
Cell[CellGroupData[{
Cell[308984, 6736, 346, 7, 117, "Input",ExpressionUUID->"a045ccba-7f45-4e5c-88aa-22ef20be8285"],
Cell[309333, 6745, 170, 2, 97, "Output",ExpressionUUID->"eb3e9c3e-d75c-44ef-9aa7-90fdd944a499"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309540, 6752, 322, 8, 145, "Input",ExpressionUUID->"23d878f5-b7ca-4651-81ef-d35e3092f72c"],
Cell[309865, 6762, 297, 7, 80, "Message",ExpressionUUID->"95c7b50b-770a-494e-b54f-1b1e29413b07"],
Cell[310165, 6771, 315, 9, 146, "Output",ExpressionUUID->"4a356828-7512-4490-9e54-94f9184147ce"]
}, Open  ]],
Cell[310495, 6783, 298, 7, 145, "Input",ExpressionUUID->"7347d058-c22a-4bf5-b3e2-e095e3b90cd6"],
Cell[CellGroupData[{
Cell[310818, 6794, 19976, 403, 1336, "WolframAlphaShortInput",ExpressionUUID->"8ef48f66-d6c5-496f-b694-2baebb0d9f59"],
Cell[330797, 7199, 2158, 55, 195, "Output",ExpressionUUID->"f8c1a72a-6e3a-45ae-b0ef-669cef185476"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332992, 7259, 399, 10, 120, "Input",ExpressionUUID->"30d0fa3e-bb4d-4b95-a1e2-64bb9e8c80b6"],
Cell[333394, 7271, 160, 2, 97, "Output",ExpressionUUID->"c8ae368a-0e15-45b5-9d00-101783b49dc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333591, 7278, 419, 12, 133, "Input",ExpressionUUID->"2c5b4121-2c43-4970-96bb-9795261b671b"],
Cell[334013, 7292, 152, 2, 97, "Output",ExpressionUUID->"b9996cea-5455-4191-8405-6cbcff057be6"]
}, Open  ]],
Cell[334180, 7297, 220, 3, 90, "Input",ExpressionUUID->"f297dada-ffe1-4ba1-92b1-e282bbe50816"],
Cell[334403, 7302, 334, 9, 132, "Input",ExpressionUUID->"12ab1a4e-dc10-4ee9-83a9-71aab805987d"],
Cell[334740, 7313, 263, 6, 132, "Input",ExpressionUUID->"20f68e9a-f1bb-449e-9b71-8063dbb8f370"],
Cell[CellGroupData[{
Cell[335028, 7323, 295, 6, 117, "Input",ExpressionUUID->"2c8db89c-3e57-4a24-aa53-171bbde5481e"],
Cell[335326, 7331, 149, 2, 122, "Output",ExpressionUUID->"624389ad-f6c7-43f2-b62d-ddd6b64e0399"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335512, 7338, 262, 5, 139, "Input",ExpressionUUID->"14b8ab9d-c52c-4356-b4fe-787b030620b0"],
Cell[335777, 7345, 277, 7, 145, "Output",ExpressionUUID->"57ad027b-3b48-42a9-b709-2cbf2458dce7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336091, 7357, 202, 3, 90, "Input",ExpressionUUID->"15ea70db-c63f-4593-b7e3-2073fb791e43"],
Cell[336296, 7362, 186, 3, 122, "Output",ExpressionUUID->"e7b6f0a0-f779-4183-ba12-88b051112f0a"]
}, Open  ]],
Cell[336497, 7368, 368, 10, 96, "Input",ExpressionUUID->"395e755f-eb12-4e4b-8791-2fa7c1901393"],
Cell[336868, 7380, 294, 7, 121, "Input",ExpressionUUID->"3a5c1840-8789-4c99-8505-d310166384d5"],
Cell[CellGroupData[{
Cell[337187, 7391, 297, 6, 117, "Input",ExpressionUUID->"3d04cdc1-8f20-477d-afde-016b702fd146"],
Cell[337487, 7399, 169, 2, 155, "Output",ExpressionUUID->"fe7f648a-0cae-4f2f-95dd-41596a8e799e"]
}, Open  ]]
}
]
*)

